<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Ecma International-relevant MDN issues</title>
        <link>https://dontcallmedom.github.io/mdn-issue-by-spec/ecma_international.rss</link>
        <description>Issue filed on MDN Web Docs related to pages attached to technologies developed by Ecma International</description>
        <lastBuildDate>Tue, 10 Oct 2023 08:50:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[[ecmascript] Import assertions proposal renamed to import attributes]]></title>
            <link>https://github.com/mdn/content/issues/29572</link>
            <guid>https://github.com/mdn/content/issues/29572</guid>
            <pubDate>Tue, 10 Oct 2023 08:50:02 GMT</pubDate>
            <content:encoded><![CDATA[<h3 dir="auto">MDN URL</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import</a></p>
<h3 dir="auto">What specific section or headline is this issue about?</h3>
<p dir="auto"><em>No response</em></p>
<h3 dir="auto">What information was incorrect, unhelpful, or incomplete?</h3>
<p dir="auto">That page mention import assertions, with the <code class="notranslate">import ... assert { ... }</code> syntax.</p>
<h3 dir="auto">What did you expect to see?</h3>
<p dir="auto">The proposal has been renamed to "import attributes", and the keyword has been replaced from <code class="notranslate">assert</code> to <code class="notranslate">with</code>. <code class="notranslate">assert</code> is now "deprecated and should not be relied upon".</p>
<h3 dir="auto">Do you have any supporting links, references, or citations?</h3>
<p dir="auto"><a href="https://tc39.es/proposal-import-attributes/" rel="nofollow">https://tc39.es/proposal-import-attributes/</a>, specifically <a href="https://tc39.es/proposal-import-attributes/#sec-deprecated-assert-keyword-for-import-attributes" rel="nofollow">https://tc39.es/proposal-import-attributes/#sec-deprecated-assert-keyword-for-import-attributes</a>.</p>
<h3 dir="auto">Do you have anything more you want to share?</h3>
<p dir="auto">Chrome is the only browser implementing <code class="notranslate">assert</code> (and V8-based platforms).</p>
<p dir="auto">Chrome implements <code class="notranslate">with</code> under a flag (and V8-based platforms), Safari implements <code class="notranslate">with</code> in TP and Firefox is implementing it.</p>
<p dir="auto">The proposal update comes also with some semantic changes, however these details have never been documented so there is no change needed to the docs:</p>
<ul dir="auto">
<li>invalid attribute keys are now disallowed, rather than silently ignored</li>
<li>JSON and CSS modules are fetched with the appropriate HTTP headers (<a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1787684142" data-permission-text="Title is private" data-url="https://github.com/whatwg/html/issues/9486" data-hovercard-type="pull_request" data-hovercard-url="/whatwg/html/pull/9486/hovercard" href="https://github.com/whatwg/html/pull/9486">whatwg/html#9486</a>)</li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[ecmascript] equivalence of x &&= y and x && ( x = y )]]></title>
            <link>https://github.com/mdn/content/issues/29524</link>
            <guid>https://github.com/mdn/content/issues/29524</guid>
            <pubDate>Fri, 06 Oct 2023 23:24:08 GMT</pubDate>
            <content:encoded><![CDATA[<h3 dir="auto">MDN URL</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment</a></p>
<h3 dir="auto">What specific section or headline is this issue about?</h3>
<p dir="auto">Description</p>
<h3 dir="auto">What information was incorrect, unhelpful, or incomplete?</h3>
<p dir="auto">Worth mentioning that x &amp;&amp;= y is equivalent to x &amp;&amp; ( x = y ) except that x is only evaluated once.</p>
<h3 dir="auto">What did you expect to see?</h3>
<p dir="auto">Elaboration that x is evaluated only once in x &amp;&amp;= y.</p>
<h3 dir="auto">Do you have any supporting links, references, or citations?</h3>
<p dir="auto">Caveat that in x &amp;&amp;= y, x is evaluated only once, contrary to x &amp;&amp; ( x = y ).</p>
<h3 dir="auto">Do you have anything more you want to share?</h3>
<p dir="auto"><em>No response</em></p>
<h3 dir="auto">MDN metadata</h3>

<details>
<summary>Page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/javascript/reference/operators/logical_and_assignment</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND_assignment</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/logical_and_assignment/index.md">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/logical_and_assignment/index.md</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/f616cb604af851f77f8cd59368e94ee3e43a8838/hovercard" href="https://github.com/mdn/content/commit/f616cb604af851f77f8cd59368e94ee3e43a8838"><tt>f616cb6</tt></a></li>
<li>Document last modified: 2023-08-15T14:59:44.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[ecmascript] Include information/section on "Method definitions in object literals"]]></title>
            <link>https://github.com/mdn/content/issues/29489</link>
            <guid>https://github.com/mdn/content/issues/29489</guid>
            <pubDate>Thu, 05 Oct 2023 00:01:28 GMT</pubDate>
            <content:encoded><![CDATA[<h3 dir="auto">MDN URL</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Method_definitions" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Method_definitions</a></p>
<h3 dir="auto">What specific section or headline is this issue about?</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Method_definitions#method_definitions_in_classes" rel="nofollow">Method definitions in classes</a></p>
<h3 dir="auto">What information was incorrect, unhelpful, or incomplete?</h3>
<p dir="auto"><em>From my perspective</em>, this is incomplete:</p>
<blockquote>
<p dir="auto">Public instance methods are defined on the prototype property of the class and are thus shared by all instances of the class. They are writable, non-enumerable, and configurable.</p>
</blockquote>
<h3 dir="auto">What did you expect to see?</h3>
<p dir="auto">I'm browsing the documentation because I'm trying to learn the difference between these two:</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="class ClassWithPublicInstanceMethod {
  publicMethod() {
    return &quot;hello world&quot;;
  }
}

const objectLiteralMethod = {
  publicMethod() {
    return &quot;hello world&quot;;
  }
}"><pre class="notranslate"><span class="pl-k">class</span> <span class="pl-v">ClassWithPublicInstanceMethod</span> <span class="pl-kos">{</span>
  <span class="pl-en">publicMethod</span><span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
    <span class="pl-k">return</span> <span class="pl-s">"hello world"</span><span class="pl-kos">;</span>
  <span class="pl-kos">}</span>
<span class="pl-kos">}</span>

<span class="pl-k">const</span> <span class="pl-s1">objectLiteralMethod</span> <span class="pl-c1">=</span> <span class="pl-kos">{</span>
  <span class="pl-en">publicMethod</span><span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
    <span class="pl-k">return</span> <span class="pl-s">"hello world"</span><span class="pl-kos">;</span>
  <span class="pl-kos">}</span>
<span class="pl-kos">}</span></pre></div>
<p dir="auto">But as far as I can tell, the article only explains this for classes. If it mentions how this works on object literals, none of the following section names imply that. This also seems like the most appropriate article for this information; if it's documented elsewhere, I'm not sure where else to look.</p>
<p dir="auto">I found some information in another page: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer#method_definitions" rel="nofollow">Object initializer</a>. It doesn't answer my question, but maybe it could be linked to and/or updated to include the answer instead? I don't prefer the latter: I wouldn't expect the information to be there when there's another article title "Method definitions."</p>
<h3 dir="auto">Do you have any supporting links, references, or citations?</h3>
<p dir="auto">n/a</p>
<h3 dir="auto">Do you have anything more you want to share?</h3>
<p dir="auto">It might make sense to create a whole new section for this information? This section is called "<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Method_definitions#method_definitions_in_classes" rel="nofollow">Method definitions in classes</a>", but I'm looking for information regarding "Method definitions in object literals."</p>
<h3 dir="auto">MDN metadata</h3>

<details>
<summary>Page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/javascript/reference/functions/method_definitions</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Method_definitions" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Method_definitions</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/functions/method_definitions/index.md">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/functions/method_definitions/index.md</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/4f86aad2b0b66c0d2041354ec81400c574ab56ca/hovercard" href="https://github.com/mdn/content/commit/4f86aad2b0b66c0d2041354ec81400c574ab56ca"><tt>4f86aad</tt></a></li>
<li>Document last modified: 2023-09-12T03:52:28.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[ecmascript] Macrotasks and Microtasks]]></title>
            <link>https://github.com/mdn/content/issues/28795</link>
            <guid>https://github.com/mdn/content/issues/28795</guid>
            <pubDate>Mon, 28 Aug 2023 09:55:38 GMT</pubDate>
            <content:encoded><![CDATA[<h3 dir="auto">MDN URL</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></p>
<h3 dir="auto">What specific section or headline is this issue about?</h3>
<p dir="auto">Control flow effects of await</p>
<h3 dir="auto">What information was incorrect, unhelpful, or incomplete?</h3>
<p dir="auto">When an await is encountered in code (either in an async function or in a module), the awaited expression is executed, while all code that depends on the expression's value is paused and pushed into the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop" rel="nofollow">microtask queue</a>. The main thread is then freed for the next task in the event loop...</p>
<p dir="auto">For me, <em><strong>The main thread is then freed for the next task in the event loop</strong></em>, sounds like that next task from macrotask queue will be executed before any microtask that was pushed into the microtask queue.</p>
<h3 dir="auto">What did you expect to see?</h3>
<p dir="auto">The main thread is then freed for the next task in the event loop which will be executed after any microtask e.g. code that depends on the expression's value.</p>
<h3 dir="auto">Do you have any supporting links, references, or citations?</h3>
<p dir="auto"><a href="https://javascript.info/event-loop#macrotasks-and-microtasks" rel="nofollow">https://javascript.info/event-loop#macrotasks-and-microtasks</a></p>
<h3 dir="auto">Do you have anything more you want to share?</h3>
<p dir="auto"><em>No response</em></p>
<h3 dir="auto">MDN metadata</h3>

<details>
<summary>Page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/javascript/reference/operators/await</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/3c33463072905e81ac620dd9780313369029b498/hovercard" href="https://github.com/mdn/content/commit/3c33463072905e81ac620dd9780313369029b498"><tt>3c33463</tt></a></li>
<li>Document last modified: 2023-06-29T17:06:46.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[ecmascript] Accessing WebAssembly memory using TypedArrays is incorrect on Big Endian systems]]></title>
            <link>https://github.com/mdn/content/issues/25569</link>
            <guid>https://github.com/mdn/content/issues/25569</guid>
            <pubDate>Thu, 23 Mar 2023 12:09:31 GMT</pubDate>
            <content:encoded><![CDATA[<h3 dir="auto">MDN URL</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Memory" rel="nofollow">https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Memory</a></p>
<h3 dir="auto">What specific section or headline is this issue about?</h3>
<p dir="auto">Examples</p>
<h3 dir="auto">What information was incorrect, unhelpful, or incomplete?</h3>
<p dir="auto">The examples access values from WebAssembly using <code class="notranslate">new Uint32Array</code>:</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="  const summands = new Uint32Array(memory.buffer);
...
  const values = new Uint32Array(obj.instance.exports.memory.buffer);"><pre class="notranslate">  <span class="pl-k">const</span> <span class="pl-s1">summands</span> <span class="pl-c1">=</span> <span class="pl-k">new</span> <span class="pl-v">Uint32Array</span><span class="pl-kos">(</span><span class="pl-s1">memory</span><span class="pl-kos">.</span><span class="pl-c1">buffer</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
...
  <span class="pl-k">const</span> <span class="pl-s1">values</span> <span class="pl-c1">=</span> <span class="pl-k">new</span> <span class="pl-v">Uint32Array</span><span class="pl-kos">(</span><span class="pl-s1">obj</span><span class="pl-kos">.</span><span class="pl-c1">instance</span><span class="pl-kos">.</span><span class="pl-c1">exports</span><span class="pl-kos">.</span><span class="pl-c1">memory</span><span class="pl-kos">.</span><span class="pl-c1">buffer</span><span class="pl-kos">)</span><span class="pl-kos">;</span></pre></div>
<p dir="auto">However in the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array" rel="nofollow">Uint32Array docs</a> it says:</p>
<blockquote>
<p dir="auto">The Uint32Array typed array represents an array of 32-bit unsigned integers in the platform byte order. If control over byte order is needed, use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" rel="nofollow">DataView</a> instead.</p>
</blockquote>
<p dir="auto">(This is backed up by the ECMAScript spec: <a href="https://tc39.es/ecma262/#sec-properties-of-typedarray-instances" rel="nofollow">Typed Arrays are integer-indexed exotic objects</a>, <a href="https://tc39.es/ecma262/#sec-integer-indexed-exotic-objects-get-p-receiver" rel="nofollow">which have the [[Get]] internal method</a>, which calls <a href="https://tc39.es/ecma262/#sec-integerindexedelementget" rel="nofollow">IntegerIndexedElementGet</a>, which calls <a href="https://tc39.es/ecma262/#sec-getvaluefrombuffer" rel="nofollow">GetValueFromBuffer</a>, which uses the platforms endianness in steps 8 and 9.)</p>
<p dir="auto">However the <a href="https://webassembly.github.io/spec/core/syntax/instructions.html?highlight=endian#memory-instructions" rel="nofollow">WebAssembly docs</a> say:</p>
<blockquote>
<p dir="auto">All values are read and written in <em><strong>little endian</strong></em> byte order.</p>
</blockquote>
<p dir="auto">So it appears that the example will return incorrect results on big-endian systems.</p>
<h3 dir="auto">What did you expect to see?</h3>
<p dir="auto">An example using a <code class="notranslate">DataView.setInt32(byteOffset, value, littleEndian)</code> instead.</p>
<p dir="auto">Exposing endian-ness like this has worrying implications for web page portability.<br>
If this is a real portability pitfall, there should be warnings about it on the WebAssembly.memory and TypedArray pages.</p>
<h3 dir="auto">Do you have any supporting links, references, or citations?</h3>
<p dir="auto">I've already seen this pattern proliferating in several other places, such as:</p>
<ul dir="auto">
<li><a href="https://crates.io/crates/wasm-bindgen" rel="nofollow">wasm-bindgen</a> (I think)</li>
<li>Tutorials <a href="https://ariya.io/2019/05/basics-of-memory-access-in-webassembly" rel="nofollow">1</a> <a href="https://www.oreilly.com/library/view/webassembly-the-definitive/9781492089834/ch04.html" rel="nofollow">2</a> <a href="https://rob-blackbourn.github.io/blog/webassembly/wasm/array/arrays/javascript/c/2020/06/07/wasm-arrays.html" rel="nofollow">3</a></li>
<li>Questions <a href="https://groups.google.com/g/teavm/c/BlO4lkGNi40" rel="nofollow">1</a> <a href="https://stackoverflow.com/questions/41875728/pass-a-javascript-array-as-argument-to-a-webassembly-function" rel="nofollow">2</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/WebAssembly/Using_the_JavaScript_API" rel="nofollow">MDN: Using the WebAssembly Javascript API</a></li>
<li><a href="https://webassembly.org/getting-started/js-api/" rel="nofollow">webassembly.org: Understanding the JS API</a></li>
</ul>
<p dir="auto">So the amount of code already using this buggy pattern is already probably quite large.</p>
<h3 dir="auto">Do you have anything more you want to share?</h3>
<p dir="auto">Perhaps javascript could use a <code class="notranslate">LittleEndianTypedArray</code> or similar. And maybe <code class="notranslate">new Uint32Array(wasmmemory.buffer)</code> should throw a type error, only allowing <code class="notranslate">Uint8Array</code> and <code class="notranslate">Int8Array</code>.</p>
<h3 dir="auto">MDN metadata</h3>

<details>
<summary>Page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/webassembly/javascript_interface/memory</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Memory" rel="nofollow">https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Memory</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/webassembly/javascript_interface/memory/index.md">https://github.com/mdn/content/blob/main/files/en-us/webassembly/javascript_interface/memory/index.md</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/fe898ddf33314ee129256c3862c5c53106eeec1f/hovercard" href="https://github.com/mdn/content/commit/fe898ddf33314ee129256c3862c5c53106eeec1f"><tt>fe898dd</tt></a></li>
<li>Document last modified: 2023-02-23T10:05:41.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[ecmascript] Misleading information around await's interaction with microtask/task queues]]></title>
            <link>https://github.com/mdn/content/issues/24177</link>
            <guid>https://github.com/mdn/content/issues/24177</guid>
            <pubDate>Sun, 05 Feb 2023 16:19:19 GMT</pubDate>
            <content:encoded><![CDATA[<h3 dir="auto">MDN URL</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></p>
<h3 dir="auto">What specific section or headline is this issue about?</h3>
<p dir="auto">Control flow effects of await</p>
<h3 dir="auto">What information was incorrect, unhelpful, or incomplete?</h3>
<blockquote>
<p dir="auto">...all code that depends on the expression's value is paused and pushed into the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop" rel="nofollow">microtask queue</a>.</p>
</blockquote>
<p dir="auto"><code class="notranslate">await</code> does not inherently push anything into the microtask queue, at least not unless the promise being awaited is already settled.  The microtask queue is where promise tasks go after the promise is settled. <code class="notranslate">await</code> simply pauses the function. The microtask of resuming the function is added to the queue when the promise ultimately settles.</p>
<p dir="auto">The "microtask queue" link to the EventLoop page also has no mention of the microtask queue.</p>
<blockquote>
<p dir="auto">The main thread is then freed for the next task in the event loop. This happens even if the awaited value is an already-resolved promise or not a promise.</p>
</blockquote>
<p dir="auto">This only happens if the promise is not already settled (or does not get settled within further execution of the current task). If settled, function continuation is added to the microtask queue and the current task of the event loop continues to run until its microtask queue is empty.  You can create an event loop-blocking async function demonstrating this</p>
<div class="highlight highlight-source-ts notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="// blocks the event loop
async function loop(){
  await Promise.resolve()
  loop()
}
loop()"><pre class="notranslate"><span class="pl-c">// blocks the event loop</span>
<span class="pl-k">async</span> <span class="pl-k">function</span> <span class="pl-en">loop</span><span class="pl-kos">(</span><span class="pl-kos">)</span><span class="pl-kos">{</span>
  <span class="pl-k">await</span> <span class="pl-smi">Promise</span><span class="pl-kos">.</span><span class="pl-en">resolve</span><span class="pl-kos">(</span><span class="pl-kos">)</span>
  <span class="pl-en">loop</span><span class="pl-kos">(</span><span class="pl-kos">)</span>
<span class="pl-kos">}</span>
<span class="pl-en">loop</span><span class="pl-kos">(</span><span class="pl-kos">)</span></pre></div>
<p dir="auto">Despite the use of await, the main thread is not freed to run the next task.</p>
<h3 dir="auto">What did you expect to see?</h3>
<p dir="auto">A more accurate description await and its interactions with the task and microtask queues.</p>
<p dir="auto"><del>The microtask link is probably better directed to:</del><br>
<del><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide</a></del><br>
(see comment below)</p>
<h3 dir="auto">Do you have any supporting links, references, or citations?</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide</a></p>
<h3 dir="auto">Do you have anything more you want to share?</h3>
<p dir="auto"><em>No response</em></p>
<h3 dir="auto">MDN metadata</h3>

<details>
<summary>Page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/javascript/reference/operators/await</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/0e1f404f68142031b8f8d663af15ed6902352256/hovercard" href="https://github.com/mdn/content/commit/0e1f404f68142031b8f8d663af15ed6902352256"><tt>0e1f404</tt></a></li>
<li>Document last modified: 2022-12-27T01:31:43.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[ecmascript] Need a page on Execution context]]></title>
            <link>https://github.com/mdn/content/issues/5006</link>
            <guid>https://github.com/mdn/content/issues/5006</guid>
            <pubDate>Fri, 14 May 2021 18:14:38 GMT</pubDate>
            <content:encoded><![CDATA[<p dir="auto">MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this</a></p>
<h4 dir="auto">What information was incorrect, unhelpful, or incomplete?</h4>
<p dir="auto">I didn't know where exactly to post the issue. I went for "this" cause the value of "this" is strictly related to the execution context.</p>
<h4 dir="auto">Specific section or headline?</h4>
<h4 dir="auto">What did you expect to see?</h4>
<h4 dir="auto">Did you test this? If so, how?</h4>

<details>
<summary>MDN Content page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/javascript/reference/operators/this</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/this/index.html">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/this/index.html</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/13360cbad46b4ce6457f80492d73d2efd252e8a9/hovercard" href="https://github.com/mdn/content/commit/13360cbad46b4ce6457f80492d73d2efd252e8a9"><tt>13360cb</tt></a></li>
<li>Document last modified: 2021-05-05T10:31:52.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
    </channel>
</rss>