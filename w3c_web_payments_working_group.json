{
    "version": "https://jsonfeed.org/version/1",
    "title": "W3C Web Payments Working Group-relevant MDN issues",
    "home_page_url": "https://dontcallmedom.github.io/mdn-issue-by-spec/w3c_web_payments_working_group.rss",
    "description": "Issue filed on MDN Web Docs related to pages attached to technologies developed by W3C Web Payments Working Group",
    "author": {
        "name": "mdn-issue-by-spec",
        "url": "https://github.com/dontcallmedom/mdn-issue-by-spec"
    },
    "items": [
        {
            "id": "https://github.com/mdn/content/issues/9362",
            "content_html": "<h2>What page(s) did you find the problem on?</h2>\n<p>Compare the descriptions of parameters here:<br>\n<a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/show\">https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/show</a><br>\n<a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequestUpdateEvent/updateWith\">https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequestUpdateEvent/updateWith</a></p>\n<h2>What is the problem?</h2>\n<p><code>PaymentRequest</code>'s <code>show()</code> method is documented as taking a promise, while <code>PaymentRequestUpdateEvent</code>'s <code>updateWith()</code> method is documented as taking an object. Actually, the two both accept the same kind of parameter, and because of the way that promises work, one can pass either an object directly or a promise that resolves to an object.</p>\n<h2>What did you expect to see?</h2>\n<p>A consistent style that makes it clear what can be used as the argument.</p>\n<p>Promises as parameters is not very common on the web platform, but there are other cases that also have a mix of styles:</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequestEvent/respondWith\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequestEvent/respondWith</a> (also incorrectly says the <code>PaymentResponse</code> interface instead of the <code>PaymentHandlerResponse</code> dictionary)</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ExtendableEvent/waitUntil\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/ExtendableEvent/waitUntil</a> (no issue here because the promise can resolve to anything)</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent/respondWith\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent/respondWith</a> (correctly says \"<code>Response</code> or a <code>Promise</code> that resolves to a <code>Response</code>\")</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/compileStreaming\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/compileStreaming</a> (correctly says \"<code>Response</code> object or a promise that will fulfill with one\")</li>\n</ul>",
            "url": "https://github.com/mdn/content/issues/9362",
            "title": "[service-workers-1, payment-request, payment-handler] Content bug: inconsistent/incomplete descriptions of Promises as parameters",
            "date_modified": "2021-09-30T07:19:46.000Z",
            "author": {
                "name": "foolip",
                "url": "https://github.com/foolip"
            }
        }
    ]
}