{
    "version": "https://jsonfeed.org/version/1",
    "title": "Ecma International-relevant MDN issues",
    "home_page_url": "https://dontcallmedom.github.io/mdn-issue-by-spec/ecma_international.rss",
    "description": "Issue filed on MDN Web Docs related to pages attached to technologies developed by Ecma International",
    "author": {
        "name": "mdn-issue-by-spec",
        "url": "https://github.com/dontcallmedom/mdn-issue-by-spec"
    },
    "items": [
        {
            "id": "https://github.com/mdn/content/issues/33893",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Instance properties =&gt; <code class=\"notranslate\">Map.prototype.constructor</code></p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">The <code class=\"notranslate\">Map.prototype.constructor</code> entry under <em>Instance properties</em> section links to <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\" rel=\"nofollow\"><code class=\"notranslate\">Object.prototype.constructor</code></a>.</p>\n<p dir=\"auto\">Yet in the description, it states that:</p>\n<blockquote>\n<p dir=\"auto\">For Map instances, the initial value is the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/Map\" rel=\"nofollow\">Map</a> constructor.</p>\n</blockquote>\n<p dir=\"auto\">where the link here correctly refers to the <code class=\"notranslate\">Map()</code> constructor.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">The <code class=\"notranslate\">Map.prototype.constructor</code> should correctly link to <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/Map\" rel=\"nofollow\">Map</a>.</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\">According to <a href=\"https://tc39.es/ecma262/multipage/keyed-collections.html#sec-map.prototype.constructor\" rel=\"nofollow\">the standard</a>:</p>\n<blockquote>\n<p dir=\"auto\">The initial value of Map.prototype.constructor is <a href=\"https://tc39.es/ecma262/multipage/keyed-collections.html#sec-map-constructor\" rel=\"nofollow\">%Map%</a>.</p>\n</blockquote>\n<p dir=\"auto\">There should be no reason for <code class=\"notranslate\">Map.prototype.constructor</code> to link to <code class=\"notranslate\">Object.prototype.constructor</code>.</p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\">Related source code:</p>\n<p dir=\"auto\"><a href=\"https://github.com/mdn/content/blame/d377045efe5d13531b73f8823301f8cc1dc58f84/files/en-us/web/javascript/reference/global_objects/map/index.md#L314\">https://github.com/mdn/content/blame/d377045efe5d13531b73f8823301f8cc1dc58f84/files/en-us/web/javascript/reference/global_objects/map/index.md#L314</a></p>\n<p dir=\"auto\">The modification was made by commit <a href=\"https://github.com/mdn/content/commit/d19dc31570f62196a5837be38bd0b11c45e67b05#diff-24d0aab1f8d007cc2fac950232b782271f892761ed5a9c9a6e1f72a5d7ccbe90\">d19dc315</a>, which fixes <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1592555947\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/24658\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mdn/content/pull/24658/hovercard\" href=\"https://github.com/mdn/content/pull/24658\">#24658</a> .</p>\n<p dir=\"auto\">It seems that the commit has modified a bunch of files for global objects, linking all their constructors to <code class=\"notranslate\">Object.prototype.constructor</code>, which I believe is a mistake. All those links should be modified to link to their actual constructor pages.</p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/global_objects/map</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/map/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/map/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/8a9085b96d0135920be9b281d4500ff72a7a8369/hovercard\" href=\"https://github.com/mdn/content/commit/8a9085b96d0135920be9b281d4500ff72a7a8369\"><tt>8a9085b</tt></a></li>\n<li>Document last modified: 2024-03-11T23:58:09.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/33893",
            "title": "[ecmascript] Global class constructors incorrectly links to Object.prototype.constructor",
            "date_modified": "2024-06-03T08:53:39.000Z",
            "author": {
                "name": "std4453",
                "url": "https://github.com/std4453"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/33852",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield</a>*</p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">\"iterator\" 'return's don't behave the same way as the external 'generator' returns</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">In the description paragraph, it has these sentences:</p>\n<blockquote>\n<p dir=\"auto\">Then, each time the next() method of the generator is called, yield* calls the iterator's next() method, passing the argument received by the generator's next() method (always undefined for the first call), and yielding the same result object as what's returned from the iterator's next() method. If the iterator result has done: true, then the yield* expression stops executing and returns the value of that result.</p>\n</blockquote>\n<p dir=\"auto\">This isn't exactly right, according to my tests.<br>\nThe internal generator (called 'iterator' in these docs) behaves differently from the external generator with respect to how it handles it's \"return\" line.</p>\n<p dir=\"auto\">Normally with generators, a 'return' line is like another 'yield' line, but with 'done' set to 'true'.<br>\nRelated, the last yield in a generator without a 'return' provides an object like {value: x, done: false}, and then a .next() call after that provides an object like {value: undefined, done: true}.  This result is also skipped, if we were waiting for a 'done: true', when using 'yield*', presumably as a convenience to avoid unneeded empty values.</p>\n<p dir=\"auto\">I'd say this is a 'gotcha' that could be called out.</p>\n<p dir=\"auto\">Example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  const generatorFunction = function* () {\n    yield 1;\n    return 2;\n  };\n\n  const generator = generatorFunction();\n\n  console.log(generator.next());  // { value: 1, done: false }\n  console.log(generator.next());  // { value: 2, done: true }\n  console.log(generator.next());  // { value: undefined, done: true }\"><pre class=\"notranslate\"><code class=\"notranslate\">  const generatorFunction = function* () {\n    yield 1;\n    return 2;\n  };\n\n  const generator = generatorFunction();\n\n  console.log(generator.next());  // { value: 1, done: false }\n  console.log(generator.next());  // { value: 2, done: true }\n  console.log(generator.next());  // { value: undefined, done: true }\n</code></pre></div>\n<p dir=\"auto\">However, when a generator is used by a 'yield*' expression, that 'return' line gets ignored.</p>\n<p dir=\"auto\">Example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n  const generatorFunction = function* () {\n    yield 1;\n    return 2;\n  };\n\n  const generator = generatorFunction();\n\n// ^^ same code as before\n\n  const anotherGeneratorFunction = function* () {\n    yield* generator;\n    yield 3;\n    return 4;\n  };\n\n  const anotherGenerator = anotherGeneratorFunction();\n\n  console.log(anotherGenerator.next()); // { value: 1, done: false }\n// Note: &quot;value: 2&quot; is 'lost', compared to when calling '.next' on 'generator' directly\n  console.log(anotherGenerator.next()); // { value: 3, done: false }\n  console.log(anotherGenerator.next()); // { value: 4, done: true }\n  console.log(anotherGenerator.next()); // { value: undefined, done: true }\"><pre class=\"notranslate\"><code class=\"notranslate\">\n  const generatorFunction = function* () {\n    yield 1;\n    return 2;\n  };\n\n  const generator = generatorFunction();\n\n// ^^ same code as before\n\n  const anotherGeneratorFunction = function* () {\n    yield* generator;\n    yield 3;\n    return 4;\n  };\n\n  const anotherGenerator = anotherGeneratorFunction();\n\n  console.log(anotherGenerator.next()); // { value: 1, done: false }\n// Note: \"value: 2\" is 'lost', compared to when calling '.next' on 'generator' directly\n  console.log(anotherGenerator.next()); // { value: 3, done: false }\n  console.log(anotherGenerator.next()); // { value: 4, done: true }\n  console.log(anotherGenerator.next()); // { value: undefined, done: true }\n</code></pre></div>\n<p dir=\"auto\">Execution environment: Node.js v20.11.1</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">Setting aside for the moment I don't know exactly why it behaves this way, aside from \"that's what the spec says\", I think the description could be more clear about how this case works.  Maybe calling it out as \"special\" behavior when using '*yield'.</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/operators/yield_star_</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/yield</a>*</li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/yield_star_/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/yield_star_/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/c6f0f106b9083984dbf597678def6561729bb459/hovercard\" href=\"https://github.com/mdn/content/commit/c6f0f106b9083984dbf597678def6561729bb459\"><tt>c6f0f10</tt></a></li>\n<li>Document last modified: 2023-09-07T01:22:04.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/33852",
            "title": "[ecmascript] yield* has unexpected result when internal generator body contains a 'return'",
            "date_modified": "2024-05-31T07:02:46.000Z",
            "author": {
                "name": "DustinX",
                "url": "https://github.com/DustinX"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/33743",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">main heading</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">For each of <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array\" rel=\"nofollow\">BigInt64Array</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array\" rel=\"nofollow\">BigUint64Array</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\" rel=\"nofollow\">Float32Array</a>, etc. (all the TypedArray subclasses), the initial description contains:</p>\n<blockquote>\n<p dir=\"auto\">The contents are initialized to 0. [or 0n]</p>\n</blockquote>\n<p dir=\"auto\">This initialization is only done if the TypedArray subclass is created by passing a length to the constructor. It is not done if the instance is created from an existing array or a buffer.</p>\n<p dir=\"auto\">Try this in a console:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"const b0 = new Uint8Array([42]);\nconst b1 = new Uint8Array(b0.buffer);\nconsole.log(b1[0]);  // &lt;= prints 42, *not* 0\"><pre lang=\"javascript\" class=\"notranslate\"><code class=\"notranslate\">const b0 = new Uint8Array([42]);\nconst b1 = new Uint8Array(b0.buffer);\nconsole.log(b1[0]);  // &lt;= prints 42, *not* 0\n</code></pre></div>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">It should say something like:</p>\n<blockquote>\n<p dir=\"auto\">The contents are initialized to 0 [or 0n for BigInt64Array or BigUint64Array] if constructed with only a length.</p>\n</blockquote>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/global_objects/float32array</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/float32array/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/float32array/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/e01fd6206ce2fad2fe09a485bb2d3ceda53a62de/hovercard\" href=\"https://github.com/mdn/content/commit/e01fd6206ce2fad2fe09a485bb2d3ceda53a62de\"><tt>e01fd62</tt></a></li>\n<li>Document last modified: 2023-09-07T01:45:56.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/33743",
            "title": "[ecmascript] TypedArray subclass pages say contents are initialized to 0",
            "date_modified": "2024-05-24T17:30:30.000Z",
            "author": {
                "name": "rhashimoto",
                "url": "https://github.com/rhashimoto"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/33453",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Return value</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">In the main section, the return value is described as:</p>\n<blockquote>\n<p dir=\"auto\">The return value is a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" rel=\"nofollow\">Promise</a> which, when the offer has been created, is resolved with a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription\" rel=\"nofollow\">RTCSessionDescription</a> object containing the newly-created offer.</p>\n</blockquote>\n<p dir=\"auto\">But then in the \"Return value\" section, it states:</p>\n<blockquote>\n<p dir=\"auto\">A <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" rel=\"nofollow\">Promise</a> whose fulfillment handler will receive an object conforming to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/RTCSessionDescription#rtcsessiondescriptioninit\" rel=\"nofollow\">RTCSessionDescriptionInit</a> dictionary which contains the SDP describing the generated offer. That received offer should be delivered through the signaling server to a remote peer.</p>\n</blockquote>\n<p dir=\"auto\">which seems incompatible, or at the very least, confusing.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">The sections describing the return value should be the same.</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>",
            "url": "https://github.com/mdn/content/issues/33453",
            "title": "[ecmascript, webrtc] Confusing wording around return value of RTCPeerConnection.createOffer",
            "date_modified": "2024-05-06T23:27:07.000Z",
            "author": {
                "name": "srujzs",
                "url": "https://github.com/srujzs"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/33215",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_operators\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_operators</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Doesn't really fit the existing sections, maybe a new \"Chaining operators\" section?</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">The Expressions and operators page doesn't seem to mention . or ?. at all. Elsewhere (for example, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining</a>) they're both called operators, so it seems they should be on the operators page. While . is pretty obvious and used in even the introduction, at least for completeness, it should be on the operators page. ?. isn't as obvious and is (relatively) new, so should definitely be there.</p>\n<p dir=\"auto\">Also, ?? is mentioned in the text in the short-circuiting section in the Logical operators section, but not in any of the operator tables.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">At least ?. and probably . as well on the operators page.</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/guide/expressions_and_operators</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_operators\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_operators</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/guide/expressions_and_operators/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/guide/expressions_and_operators/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/9b73bdea5458572f77a401596fef9a06ed8bba1b/hovercard\" href=\"https://github.com/mdn/content/commit/9b73bdea5458572f77a401596fef9a06ed8bba1b\"><tt>9b73bde</tt></a></li>\n<li>Document last modified: 2024-04-16T06:27:06.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/33215",
            "title": "[ecmascript] Operators page doesn't mention . or ?.",
            "date_modified": "2024-04-22T20:44:17.000Z",
            "author": {
                "name": "blmatthews",
                "url": "https://github.com/blmatthews"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/32847",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Improving stack trace</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">At the end of the \"Improving stack trace\" section, the doc says \"However, there's a little performance penalty coming with <code class=\"notranslate\">return await</code> because the promise has to be unwrapped and wrapped again.\"</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">I had intuitively assumed this statement to be true in the past, but after researching it, I found some information online that demonstrated that the opposite is true: returning an unawaited promise incurs a performance penalty versus returning an awaited promise.</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><a href=\"https://stackoverflow.com/a/70979225\" rel=\"nofollow\">https://stackoverflow.com/a/70979225</a></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/operators/await</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/3c33463072905e81ac620dd9780313369029b498/hovercard\" href=\"https://github.com/mdn/content/commit/3c33463072905e81ac620dd9780313369029b498\"><tt>3c33463</tt></a></li>\n<li>Document last modified: 2023-06-29T17:06:46.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/32847",
            "title": "[ecmascript] Incorrect information about \"return await\" performance penalty",
            "date_modified": "2024-03-26T16:08:40.000Z",
            "author": {
                "name": "andrew0",
                "url": "https://github.com/andrew0"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/32210",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Test_your_skills:_Math\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Test_your_skills:_Math</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Math 2</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">const finalNumberCheck = isNaN(finalNumber) === false ? 'finalNumber is a number type. Well done!' : <code class=\"notranslate\">Ooops! finalNumber is not a number.</code>;</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN#return_value\" rel=\"nofollow\">is NaN Return value</a><br>\ntrue if the given value is <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN\" rel=\"nofollow\">NaN</a> after being <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number#number_coercion\" rel=\"nofollow\">converted to a number</a>; otherwise, false.</p>\n<p dir=\"auto\">And because we shouldn't convert the value '4633.33' to number ourselves instead of the learner, we could use NaN method.</p>\n<p dir=\"auto\">const finalNumberCheck = NaN(finalNumber) === false ? 'finalNumber is a number type. Well done!' : <code class=\"notranslate\">Ooops! finalNumber is not a number.</code>;</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/learn/javascript/first_steps/test_your_skills_colon__math</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Test_your_skills:_Math\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Test_your_skills:_Math</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/learn/javascript/first_steps/test_your_skills_colon__math/index.md\">https://github.com/mdn/content/blob/main/files/en-us/learn/javascript/first_steps/test_your_skills_colon__math/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/60358aa4fdd02bda2573dfd9fdf038b4ead2cd06/hovercard\" href=\"https://github.com/mdn/content/commit/60358aa4fdd02bda2573dfd9fdf038b4ead2cd06\"><tt>60358aa</tt></a></li>\n<li>Document last modified: 2024-02-02T19:50:32.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/32210",
            "title": "[ecmascript] Wrong use of `isNaN()`.",
            "date_modified": "2024-02-10T21:53:19.000Z",
            "author": {
                "name": "Amer-Adel",
                "url": "https://github.com/Amer-Adel"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/32207",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Constructor</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">This section states that <code class=\"notranslate\">Symbol()</code> \"Creates a new Symbol object.\" It doesn't. <code class=\"notranslate\">Symbol()</code> creates a (primitive) value of type <code class=\"notranslate\">symbol</code>. Note that <code class=\"notranslate\">BigInt</code> and <code class=\"notranslate\">Symbol</code> are similar in that both return <code class=\"notranslate\">TypeError</code> when call as a constructor (with the <code class=\"notranslate\">new</code> operator) and both return a primitive value when called as a function. There is an argument to be made that neither is a constructor function object at all, but ECMA-262 groups them with constructors. I like how the MDN <code class=\"notranslate\">BigInt</code> page deals with this ambiguity. The Constructor section on the <code class=\"notranslate\">BigInt</code> page states, \"The <code class=\"notranslate\">BigInt()</code> function returns primitive values of type <code class=\"notranslate\">BigInt</code>.\" I suggest you do the same in the Constructor section of the <code class=\"notranslate\">Symbol</code> page: \"The <code class=\"notranslate\">Symbol()</code> function returns primitive values of type <code class=\"notranslate\">Symbol</code>.\"</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">The <code class=\"notranslate\">Symbol()</code> function returns primitive values of type <code class=\"notranslate\">Symbol</code>.</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/BigInt\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/BigInt</a></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/global_objects/symbol</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/symbol/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/symbol/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/e01fd6206ce2fad2fe09a485bb2d3ceda53a62de/hovercard\" href=\"https://github.com/mdn/content/commit/e01fd6206ce2fad2fe09a485bb2d3ceda53a62de\"><tt>e01fd62</tt></a></li>\n<li>Document last modified: 2023-09-07T01:45:56.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/32207",
            "title": "[ecmascript] A JavaScript value of type symbol is not an object.",
            "date_modified": "2024-02-10T14:09:09.000Z",
            "author": {
                "name": "hagenhaus",
                "url": "https://github.com/hagenhaus"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/31930",
            "content_html": "<h2 dir=\"auto\">Acceptance Criteria</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The listed features are documented sufficiently on MDN</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> BCD is updated - NA</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Interactive example and data repos are updated if appropriate - NA</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The content has been reviewed as needed</li>\n</ul>\n<h3 dir=\"auto\">For folks helping with Firefox related documentation</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Set bugs to <code class=\"notranslate\">dev-doc-complete</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Add entry to Firefox release notes if feature is enabled in release</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Add entry to Firefox experimental features page if feature is not yet enabled in release</li>\n</ul>\n<h2 dir=\"auto\">Features to document</h2>\n<p dir=\"auto\">There is only <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#date_time_string_format\" rel=\"nofollow\">one standard date format</a> that all browsers support: <code class=\"notranslate\">YYYY-MM-DDTHH:mm:ss.sssZ</code>.</p>\n<ul dir=\"auto\">\n<li>But most browsers take non-standard formats like \"December 17, 1995\".</li>\n<li>Other browsers just use the first three letters, so above Dec, Dece, December, DecLemberXxx would work, but De or Fje would not.</li>\n<li>Firefox previously supported any substring of the correct name <code class=\"notranslate\">Dec[ember]</code>, but now it matches the others. It's a little less good, but more consistent.</li>\n</ul>\n<p dir=\"auto\">It isn't standardized so there is no way to report this in compat. But reasonable to provide a brief update in <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse#non-standard_date_strings\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse#non-standard_date_strings</a> and a release note.</p>\n<h2 dir=\"auto\">Related Gecko bugs</h2>\n<p dir=\"auto\"><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1862910\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1862910</a></p>\n<h2 dir=\"auto\">Other</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Check content open issues to see if any pertain to the subject matter. If there are any that can be closed because of the work, do so. If there are any that can be fixed relatively quickly because of the knowledge from completing this issue and you have time, feel free to go ahead and fix them.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Check if glossary updates are required for the feature you're documenting - whether an existing term needs to be updated or a new term should be added.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Check if BCD update means that content pages need to have experimental markup removed or deprecated markup added (front matter tags and macros).</li>\n</ul>",
            "url": "https://github.com/mdn/content/issues/31930",
            "title": "[ecmascript] [JavaScript] Date.parse only checks first 3 characters of month name",
            "date_modified": "2024-01-26T05:14:17.000Z",
            "author": {
                "name": "hamishwillee",
                "url": "https://github.com/hamishwillee"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/30281",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Direct and indirect eval</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">In this issue, I'm referring to the contents between these two lines of text (exclusive):</p>\n<blockquote>\n<p dir=\"auto\">Indirect eval can be seen as if the code is evaluated within a separate <code class=\"notranslate\">&lt;script&gt;</code> tag. This means:<br>\n...</p>\n<h3 dir=\"auto\">Never use eval()!</h3>\n</blockquote>\n<p dir=\"auto\">The <code class=\"notranslate\">...</code> is a bullet point list containing explanations and examples of the differences between the two eval modes.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">It's difficult for me to parse some bullet points because:</p>\n<ol dir=\"auto\">\n<li>The text (as opposed to the example code) sometimes explains one eval mode but not the other. On the other hand, sometimes it explains both:\n<ol dir=\"auto\">\n<li>At first glance, it can appear like a bullet point only applies to one mode even though that's not the case.</li>\n<li>It can take more effort to read example code than an English sentence.</li>\n</ol>\n</li>\n<li>Some text is written in negative form—e.g., \"<strong>In</strong>direct eval <strong>would not</strong> inherit the strictness of the surrounding context\"—which, in my opinion, is harder to read than positive form: \"Direct eval inherits the strictness of the surrounding context.\"</li>\n<li>Some example code blocks contain examples of both modes, some contain only one mode.\n<ol dir=\"auto\">\n<li>This can obscure where a bullet point starts and where it ends.</li>\n<li>This makes it challenging to scan for differences between the two modes.</li>\n</ol>\n</li>\n<li>There is another section named <code class=\"notranslate\">Using indirect eval()</code>, giving me a sense that some information is divided between both sections.\n<ol dir=\"auto\">\n<li>Even if this isn't true, it gives me the impression that neither section is comprehensive.</li>\n</ol>\n</li>\n</ol>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\">Apologies if my wording offended anyone. My intent was to be concise, not rude.</p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/global_objects/eval</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/eval/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global_objects/eval/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/4c26e8a3fb50d06963b06017f51ce19364350564/hovercard\" href=\"https://github.com/mdn/content/commit/4c26e8a3fb50d06963b06017f51ce19364350564\"><tt>4c26e8a</tt></a></li>\n<li>Document last modified: 2023-08-11T08:07:46.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/30281",
            "title": "[ecmascript] Describe direct and indirect eval differences in each bullet point",
            "date_modified": "2023-11-14T22:14:49.000Z",
            "author": {
                "name": "DanKaplanSES",
                "url": "https://github.com/DanKaplanSES"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/29572",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">That page mention import assertions, with the <code class=\"notranslate\">import ... assert { ... }</code> syntax.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">The proposal has been renamed to \"import attributes\", and the keyword has been replaced from <code class=\"notranslate\">assert</code> to <code class=\"notranslate\">with</code>. <code class=\"notranslate\">assert</code> is now \"deprecated and should not be relied upon\".</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><a href=\"https://tc39.es/proposal-import-attributes/\" rel=\"nofollow\">https://tc39.es/proposal-import-attributes/</a>, specifically <a href=\"https://tc39.es/proposal-import-attributes/#sec-deprecated-assert-keyword-for-import-attributes\" rel=\"nofollow\">https://tc39.es/proposal-import-attributes/#sec-deprecated-assert-keyword-for-import-attributes</a>.</p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\">Chrome is the only browser implementing <code class=\"notranslate\">assert</code> (and V8-based platforms).</p>\n<p dir=\"auto\">Chrome implements <code class=\"notranslate\">with</code> under a flag (and V8-based platforms), Safari implements <code class=\"notranslate\">with</code> in TP and Firefox is implementing it.</p>\n<p dir=\"auto\">The proposal update comes also with some semantic changes, however these details have never been documented so there is no change needed to the docs:</p>\n<ul dir=\"auto\">\n<li>invalid attribute keys are now disallowed, rather than silently ignored</li>\n<li>JSON and CSS modules are fetched with the appropriate HTTP headers (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1787684142\" data-permission-text=\"Title is private\" data-url=\"https://github.com/whatwg/html/issues/9486\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/whatwg/html/pull/9486/hovercard\" href=\"https://github.com/whatwg/html/pull/9486\">whatwg/html#9486</a>)</li>\n</ul>",
            "url": "https://github.com/mdn/content/issues/29572",
            "title": "[ecmascript] Import assertions proposal renamed to import attributes",
            "date_modified": "2023-10-10T08:50:02.000Z",
            "author": {
                "name": "nicolo-ribaudo",
                "url": "https://github.com/nicolo-ribaudo"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/28795",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Control flow effects of await</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">When an await is encountered in code (either in an async function or in a module), the awaited expression is executed, while all code that depends on the expression's value is paused and pushed into the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop\" rel=\"nofollow\">microtask queue</a>. The main thread is then freed for the next task in the event loop...</p>\n<p dir=\"auto\">For me, <em><strong>The main thread is then freed for the next task in the event loop</strong></em>, sounds like that next task from macrotask queue will be executed before any microtask that was pushed into the microtask queue.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">The main thread is then freed for the next task in the event loop which will be executed after any microtask e.g. code that depends on the expression's value.</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><a href=\"https://javascript.info/event-loop#macrotasks-and-microtasks\" rel=\"nofollow\">https://javascript.info/event-loop#macrotasks-and-microtasks</a></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/operators/await</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/3c33463072905e81ac620dd9780313369029b498/hovercard\" href=\"https://github.com/mdn/content/commit/3c33463072905e81ac620dd9780313369029b498\"><tt>3c33463</tt></a></li>\n<li>Document last modified: 2023-06-29T17:06:46.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/28795",
            "title": "[ecmascript] Macrotasks and Microtasks",
            "date_modified": "2023-08-28T09:55:38.000Z",
            "author": {
                "name": "a-brcic",
                "url": "https://github.com/a-brcic"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/25569",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Memory\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Memory</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Examples</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">The examples access values from WebAssembly using <code class=\"notranslate\">new Uint32Array</code>:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  const summands = new Uint32Array(memory.buffer);\n...\n  const values = new Uint32Array(obj.instance.exports.memory.buffer);\"><pre class=\"notranslate\">  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">summands</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Uint32Array</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">memory</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">buffer</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n...\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">values</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Uint32Array</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">obj</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">instance</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">exports</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">memory</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">buffer</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">However in the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array\" rel=\"nofollow\">Uint32Array docs</a> it says:</p>\n<blockquote>\n<p dir=\"auto\">The Uint32Array typed array represents an array of 32-bit unsigned integers in the platform byte order. If control over byte order is needed, use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView\" rel=\"nofollow\">DataView</a> instead.</p>\n</blockquote>\n<p dir=\"auto\">(This is backed up by the ECMAScript spec: <a href=\"https://tc39.es/ecma262/#sec-properties-of-typedarray-instances\" rel=\"nofollow\">Typed Arrays are integer-indexed exotic objects</a>, <a href=\"https://tc39.es/ecma262/#sec-integer-indexed-exotic-objects-get-p-receiver\" rel=\"nofollow\">which have the [[Get]] internal method</a>, which calls <a href=\"https://tc39.es/ecma262/#sec-integerindexedelementget\" rel=\"nofollow\">IntegerIndexedElementGet</a>, which calls <a href=\"https://tc39.es/ecma262/#sec-getvaluefrombuffer\" rel=\"nofollow\">GetValueFromBuffer</a>, which uses the platforms endianness in steps 8 and 9.)</p>\n<p dir=\"auto\">However the <a href=\"https://webassembly.github.io/spec/core/syntax/instructions.html?highlight=endian#memory-instructions\" rel=\"nofollow\">WebAssembly docs</a> say:</p>\n<blockquote>\n<p dir=\"auto\">All values are read and written in <em><strong>little endian</strong></em> byte order.</p>\n</blockquote>\n<p dir=\"auto\">So it appears that the example will return incorrect results on big-endian systems.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">An example using a <code class=\"notranslate\">DataView.setInt32(byteOffset, value, littleEndian)</code> instead.</p>\n<p dir=\"auto\">Exposing endian-ness like this has worrying implications for web page portability.<br>\nIf this is a real portability pitfall, there should be warnings about it on the WebAssembly.memory and TypedArray pages.</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\">I've already seen this pattern proliferating in several other places, such as:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://crates.io/crates/wasm-bindgen\" rel=\"nofollow\">wasm-bindgen</a> (I think)</li>\n<li>Tutorials <a href=\"https://ariya.io/2019/05/basics-of-memory-access-in-webassembly\" rel=\"nofollow\">1</a> <a href=\"https://www.oreilly.com/library/view/webassembly-the-definitive/9781492089834/ch04.html\" rel=\"nofollow\">2</a> <a href=\"https://rob-blackbourn.github.io/blog/webassembly/wasm/array/arrays/javascript/c/2020/06/07/wasm-arrays.html\" rel=\"nofollow\">3</a></li>\n<li>Questions <a href=\"https://groups.google.com/g/teavm/c/BlO4lkGNi40\" rel=\"nofollow\">1</a> <a href=\"https://stackoverflow.com/questions/41875728/pass-a-javascript-array-as-argument-to-a-webassembly-function\" rel=\"nofollow\">2</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/WebAssembly/Using_the_JavaScript_API\" rel=\"nofollow\">MDN: Using the WebAssembly Javascript API</a></li>\n<li><a href=\"https://webassembly.org/getting-started/js-api/\" rel=\"nofollow\">webassembly.org: Understanding the JS API</a></li>\n</ul>\n<p dir=\"auto\">So the amount of code already using this buggy pattern is already probably quite large.</p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\">Perhaps javascript could use a <code class=\"notranslate\">LittleEndianTypedArray</code> or similar. And maybe <code class=\"notranslate\">new Uint32Array(wasmmemory.buffer)</code> should throw a type error, only allowing <code class=\"notranslate\">Uint8Array</code> and <code class=\"notranslate\">Int8Array</code>.</p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/webassembly/javascript_interface/memory</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Memory\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/WebAssembly/JavaScript_interface/Memory</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/webassembly/javascript_interface/memory/index.md\">https://github.com/mdn/content/blob/main/files/en-us/webassembly/javascript_interface/memory/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/fe898ddf33314ee129256c3862c5c53106eeec1f/hovercard\" href=\"https://github.com/mdn/content/commit/fe898ddf33314ee129256c3862c5c53106eeec1f\"><tt>fe898dd</tt></a></li>\n<li>Document last modified: 2023-02-23T10:05:41.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/25569",
            "title": "[ecmascript] Accessing WebAssembly memory using TypedArrays is incorrect on Big Endian systems",
            "date_modified": "2023-03-23T12:09:31.000Z",
            "author": {
                "name": "majaha",
                "url": "https://github.com/majaha"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/24177",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Control flow effects of await</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<blockquote>\n<p dir=\"auto\">...all code that depends on the expression's value is paused and pushed into the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop\" rel=\"nofollow\">microtask queue</a>.</p>\n</blockquote>\n<p dir=\"auto\"><code class=\"notranslate\">await</code> does not inherently push anything into the microtask queue, at least not unless the promise being awaited is already settled.  The microtask queue is where promise tasks go after the promise is settled. <code class=\"notranslate\">await</code> simply pauses the function. The microtask of resuming the function is added to the queue when the promise ultimately settles.</p>\n<p dir=\"auto\">The \"microtask queue\" link to the EventLoop page also has no mention of the microtask queue.</p>\n<blockquote>\n<p dir=\"auto\">The main thread is then freed for the next task in the event loop. This happens even if the awaited value is an already-resolved promise or not a promise.</p>\n</blockquote>\n<p dir=\"auto\">This only happens if the promise is not already settled (or does not get settled within further execution of the current task). If settled, function continuation is added to the microtask queue and the current task of the event loop continues to run until its microtask queue is empty.  You can create an event loop-blocking async function demonstrating this</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// blocks the event loop\nasync function loop(){\n  await Promise.resolve()\n  loop()\n}\nloop()\"><pre class=\"notranslate\"><span class=\"pl-c\">// blocks the event loop</span>\n<span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">loop</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">await</span> <span class=\"pl-smi\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-en\">loop</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-en\">loop</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">Despite the use of await, the main thread is not freed to run the next task.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">A more accurate description await and its interactions with the task and microtask queues.</p>\n<p dir=\"auto\"><del>The microtask link is probably better directed to:</del><br>\n<del><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide</a></del><br>\n(see comment below)</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide</a></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/operators/await</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/0e1f404f68142031b8f8d663af15ed6902352256/hovercard\" href=\"https://github.com/mdn/content/commit/0e1f404f68142031b8f8d663af15ed6902352256\"><tt>0e1f404</tt></a></li>\n<li>Document last modified: 2022-12-27T01:31:43.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/24177",
            "title": "[ecmascript] Misleading information around await's interaction with microtask/task queues",
            "date_modified": "2023-02-05T16:19:19.000Z",
            "author": {
                "name": "senocular",
                "url": "https://github.com/senocular"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/5006",
            "content_html": "<p dir=\"auto\">MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this</a></p>\n<h4 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h4>\n<p dir=\"auto\">I didn't know where exactly to post the issue. I went for \"this\" cause the value of \"this\" is strictly related to the execution context.</p>\n<h4 dir=\"auto\">Specific section or headline?</h4>\n<h4 dir=\"auto\">What did you expect to see?</h4>\n<h4 dir=\"auto\">Did you test this? If so, how?</h4>\n\n<details>\n<summary>MDN Content page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/operators/this</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/this/index.html\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/this/index.html</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/13360cbad46b4ce6457f80492d73d2efd252e8a9/hovercard\" href=\"https://github.com/mdn/content/commit/13360cbad46b4ce6457f80492d73d2efd252e8a9\"><tt>13360cb</tt></a></li>\n<li>Document last modified: 2021-05-05T10:31:52.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/5006",
            "title": "[ecmascript] Need a page on Execution context",
            "date_modified": "2021-05-14T18:14:38.000Z",
            "author": {
                "name": "552020",
                "url": "https://github.com/552020"
            }
        }
    ]
}