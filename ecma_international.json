{
    "version": "https://jsonfeed.org/version/1",
    "title": "Ecma International-relevant MDN issues",
    "home_page_url": "https://dontcallmedom.github.io/mdn-issue-by-spec/ecma_international.rss",
    "description": "Issue filed on MDN Web Docs related to pages attached to technologies developed by Ecma International",
    "author": {
        "name": "mdn-issue-by-spec",
        "url": "https://github.com/dontcallmedom/mdn-issue-by-spec"
    },
    "items": [
        {
            "id": "https://github.com/mdn/content/issues/21842",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Description</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<blockquote>\n<p dir=\"auto\">The await expression causes async function execution to pause until a promise is settled (that is, fulfilled or rejected), and to resume execution of the async function after fulfillment.</p>\n</blockquote>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">Actually <code class=\"notranslate\">await</code> always causes the function execution to pause.<br>\nEven if the value is a resolved promise or even non-thenable, the execution will still pause and a microtask will queue.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"let test = true;\n(async () =&gt; {\n  while (test) {\n    await null;\n    console.log(&quot;running&quot;);\n  }\n  console.log(&quot;end&quot;)\n})();\n(async () =&gt; {\n  for (let i = 0; i &lt; 10; i++) {\n    await null;\n  }\n  test = false;\n})();\"><pre><span class=\"pl-k\">let</span> <span class=\"pl-s1\">test</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">true</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">while</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">test</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-c1\">null</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"running\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"end\"</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">for</span> <span class=\"pl-kos\">(</span><span class=\"pl-k\">let</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">&lt;</span> <span class=\"pl-c1\">10</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">++</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">await</span> <span class=\"pl-c1\">null</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n  <span class=\"pl-s1\">test</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">false</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\">The behavior is inherited from <code class=\"notranslate\">then</code></p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const resolved = Promise.resolve();\nresolved.then(() =&gt; {\n  console.log(&quot;promise has been resolved&quot;);\n  console.log(&quot;before resolved.then()&quot;);\n  resolved.then(() =&gt; {\n    console.log(&quot;inside resolved.then()&quot;);\n  });\n  console.log(&quot;after resolved.then()&quot;);\n});\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">resolved</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">resolved</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"promise has been resolved\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"before resolved.then()\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-s1\">resolved</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">then</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"inside resolved.then()\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"after resolved.then()\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">This behavior should be mentioned in <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then\" rel=\"nofollow\">Promise.prototype.then()</a>, I think.</p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/operators/await</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/1fdf2cae1c22f4672546b7c7a0ecc2247dc200ed/hovercard\" href=\"https://github.com/mdn/content/commit/1fdf2cae1c22f4672546b7c7a0ecc2247dc200ed\"><tt>1fdf2ca</tt></a></li>\n<li>Document last modified: 2022-10-11T06:45:07.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/21842",
            "title": "[ecmascript] await always causes execution to pause",
            "date_modified": "2022-10-26T05:59:12.000Z",
            "author": {
                "name": "Worldwidebrine",
                "url": "https://github.com/Worldwidebrine"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/21814",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Description</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<blockquote>\n<p dir=\"auto\">The expression is resolved in the same way as Promise.resolve(), which means thenable objects are supported, and if expression is not a promise, it's implicitly wrapped in a Promise and then resolved.</p>\n</blockquote>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">How <code class=\"notranslate\">await</code> treats a value not thenable is <code class=\"notranslate\">Promise.resolve(non_thenable_value)</code> too.</p>\n<blockquote>\n<p dir=\"auto\">implicitly wrapped in a Promise and then resolved.</p>\n</blockquote>\n<p dir=\"auto\">This is exactly what <code class=\"notranslate\">Promise.resolve()</code> does.</p>\n<p dir=\"auto\">The behavior is the same.<br>\nBut the description sounds like non-thenable values are handled differently.</p>\n<p dir=\"auto\">Shouldn't the wrap behavior be described as <code class=\"notranslate\">await</code>'s behavior, regardless of thenable?</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/operators/await</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/1fdf2cae1c22f4672546b7c7a0ecc2247dc200ed/hovercard\" href=\"https://github.com/mdn/content/commit/1fdf2cae1c22f4672546b7c7a0ecc2247dc200ed\"><tt>1fdf2ca</tt></a></li>\n<li>Document last modified: 2022-10-11T06:45:07.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/21814",
            "title": "[ecmascript] await",
            "date_modified": "2022-10-25T07:57:26.000Z",
            "author": {
                "name": "Worldwidebrine",
                "url": "https://github.com/Worldwidebrine"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/21180",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Examples</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">The Examples section of the WeakMaps page could be expanded to include storage/caching examples</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">I expect to see the 2 most common use-cases of WeakMaps included in the Examples section.<br>\nThey are:</p>\n<ul dir=\"auto\">\n<li><strong>Storing additional data</strong> and</li>\n<li><strong>Caching with a WeakMap</strong></li>\n</ul>\n<p dir=\"auto\">Currently, there's no example related to either of these in the WeakMaps page.</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><a href=\"https://exploringjs.com/impatient-js/ch_weakmaps.html#use-case-attaching-values-to-objects\" rel=\"nofollow\">ExploringJs - WeakMaps</a><br>\n<a href=\"https://javascript.info/weakmap-weakset#use-case-additional-data\" rel=\"nofollow\">Javascript.info - WeakMaps and WeakSet</a></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>",
            "url": "https://github.com/mdn/content/issues/21180",
            "title": "[ecmascript] Content Suggestion: Include common use-cases of WeakMap in WeakMap documentation page",
            "date_modified": "2022-09-29T08:23:46.000Z",
            "author": {
                "name": "slim-codes",
                "url": "https://github.com/slim-codes"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/19220",
            "content_html": "<h2 dir=\"auto\">What is the new suggestion?</h2>\n<p dir=\"auto\">Document <a href=\"https://github.com/tc39/proposal-import-assertions\">import assertions</a>.</p>\n<h2 dir=\"auto\">Why is it important or useful?</h2>\n<p dir=\"auto\"><a href=\"https://v8.dev/features/import-assertions\" rel=\"nofollow\">Already shipped in V8 for over a year.</a> JSON modules have been unflagged in Node so a lot of people are starting to rely on it. Need more information on its syntax and semantics.</p>\n<p dir=\"auto\">Very importantly, import assertions do not change the semantics of the module itself—it cannot affect how the module is interpreted, nor can it be used as part of the cache key. Virtually all existing toolings, except JSON modules themselves (<code class=\"notranslate\">assert { type: \"json\" }</code>), that try to extend import assertions are using them in a spec-incompliant way. (TBH, that to me means the proposal is designed poorly.) We need to call that out.</p>\n<p dir=\"auto\">We just need a new section under <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import</a>, but with so many additions to JavaScript modules in the future, it may make sense to start a new reference chapter like \"modules\", parallel to the existing \"classes\" and \"functions\" chapters...</p>\n<h2 dir=\"auto\">Other supporting information</h2>\n<ul dir=\"auto\">\n<li>Spec draft: <a href=\"https://tc39.es/proposal-import-assertions/\" rel=\"nofollow\">https://tc39.es/proposal-import-assertions/</a></li>\n<li>Proposal: <a href=\"https://github.com/tc39/proposal-import-assertions\">https://github.com/tc39/proposal-import-assertions</a></li>\n<li>This is a sibling proposal of <a href=\"https://github.com/tc39/proposal-json-modules\">JSON modules</a>, so we should probably mention that as well.</li>\n<li>Only after this proposal does <code class=\"notranslate\">import()</code> have a second parameter and therefore optional trailing comma. <code class=\"notranslate\">import(\"foo\",)</code> works in Chrome but is a syntax error in Safari/Firefox. We need to add this to BCD and the trailing commas page: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas</a></li>\n</ul>",
            "url": "https://github.com/mdn/content/issues/19220",
            "title": "[ecmascript] Document import assertions",
            "date_modified": "2022-08-06T05:08:53.000Z",
            "author": {
                "name": "Josh-Cena",
                "url": "https://github.com/Josh-Cena"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/9974",
            "content_html": "<h2 dir=\"auto\">What page(s) did you find the problem on?</h2>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/error\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/FileReader/error</a> says:</p>\n<blockquote>\n<p dir=\"auto\">In Chrome 48+/Firefox 58+ this property returns a DOMException because DOMError has been removed from the DOM standard.</p>\n</blockquote>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof#regular_expressions\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof#regular_expressions</a> says:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"typeof /s/ === 'function'; // Chrome 1-12 Non-conform to ECMAScript 5.1\ntypeof /s/ === 'object';   // Firefox 5+  Conform to ECMAScript 5.1\"><pre><span class=\"pl-k\">typeof</span> <span class=\"pl-pds\"><span class=\"pl-c1\">/</span>s<span class=\"pl-c1\">/</span></span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'function'</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// Chrome 1-12 Non-conform to ECMAScript 5.1</span>\n<span class=\"pl-k\">typeof</span> <span class=\"pl-pds\"><span class=\"pl-c1\">/</span>s<span class=\"pl-c1\">/</span></span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'object'</span><span class=\"pl-kos\">;</span>   <span class=\"pl-c\">// Firefox 5+  Conform to ECMAScript 5.1</span></pre></div>\n<h2 dir=\"auto\">What is the problem?</h2>\n<p dir=\"auto\">Information about quirks in very old browser releases seems like a net negative for readers of MDN. It will require readers to make a judgement about whether this could affect them, by testing or looking at release dates for the browsers.</p>\n<h2 dir=\"auto\">What did you expect to see?</h2>\n<p dir=\"auto\">Irrelevant information should be pruned from MDN after some time. Perhaps some special markup could be used when referring to a specific browser version, so that tools could be written to list information about browser releases too old to be relevant. Such cleanup happens to some extent in BCD, around irrelevant features removed from all browsers for more than 2 years, and also old flag data.</p>\n<h2 dir=\"auto\">Did you test this? If so, how?</h2>\n<p dir=\"auto\">Searching for \"Chrome \" + a number of any other browser followed by a number can find many examples like these.</p>",
            "url": "https://github.com/mdn/content/issues/9974",
            "title": "[ecmascript, FileAPI] Clean up irrelevant notes about old browser releases",
            "date_modified": "2021-10-21T07:48:17.000Z",
            "author": {
                "name": "foolip",
                "url": "https://github.com/foolip"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/5006",
            "content_html": "<p dir=\"auto\">MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this</a></p>\n<h4 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h4>\n<p dir=\"auto\">I didn't know where exactly to post the issue. I went for \"this\" cause the value of \"this\" is strictly related to the execution context.</p>\n<h4 dir=\"auto\">Specific section or headline?</h4>\n<h4 dir=\"auto\">What did you expect to see?</h4>\n<h4 dir=\"auto\">Did you test this? If so, how?</h4>\n\n<details>\n<summary>MDN Content page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/operators/this</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/this/index.html\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/this/index.html</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/13360cbad46b4ce6457f80492d73d2efd252e8a9/hovercard\" href=\"https://github.com/mdn/content/commit/13360cbad46b4ce6457f80492d73d2efd252e8a9\"><tt>13360cb</tt></a></li>\n<li>Document last modified: 2021-05-05T10:31:52.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/5006",
            "title": "[ecmascript] Issue with \"this\": lack of an article about the 'Execution context'. ",
            "date_modified": "2021-05-14T18:14:38.000Z",
            "author": {
                "name": "552020",
                "url": "https://github.com/552020"
            }
        }
    ]
}