<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>W3C Web Performance Working Group-relevant MDN issues</title>
        <link>https://dontcallmedom.github.io/mdn-issue-by-spec/w3c_web_performance_working_group.rss</link>
        <description>Issue filed on MDN Web Docs related to pages attached to technologies developed by W3C Web Performance Working Group</description>
        <lastBuildDate>Fri, 31 Mar 2023 11:44:27 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[[requestidlecallback] Odd API in polyfill]]></title>
            <link>https://github.com/mdn/content/issues/25804</link>
            <guid>https://github.com/mdn/content/issues/25804</guid>
            <pubDate>Fri, 31 Mar 2023 11:44:27 GMT</pubDate>
            <content:encoded><![CDATA[<h3 dir="auto">MDN URL</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback</a></p>
<h3 dir="auto">What specific section or headline is this issue about?</h3>
<p dir="auto">See Also</p>
<h3 dir="auto">What information was incorrect, unhelpful, or incomplete?</h3>
<p dir="auto">The polyfill has a questionable implementation of <code class="notranslate">timeRemaining</code> which increases with time rather than decreasing as per the spec.</p>
<h3 dir="auto">What did you expect to see?</h3>
<p dir="auto">A polyfill that reflects the spec.</p>
<h3 dir="auto">Do you have any supporting links, references, or citations?</h3>
<p dir="auto"><a href="https://www.w3.org/TR/requestidlecallback/#example-2" rel="nofollow">https://www.w3.org/TR/requestidlecallback/#example-2</a></p>
<p dir="auto"><a href="https://www.w3.org/TR/requestidlecallback/#the-idledeadline-interface" rel="nofollow">https://www.w3.org/TR/requestidlecallback/#the-idledeadline-interface</a></p>
<blockquote>
<p dir="auto">When the timeRemaining() method is invoked on an <a href="https://www.w3.org/TR/requestidlecallback/#dom-idledeadline" rel="nofollow">IdleDeadline</a> object it MUST return the remaining duration before the deadline expires as a <a href="https://www.w3.org/TR/hr-time-3/#dom-domhighrestimestamp" rel="nofollow">DOMHighResTimeStamp</a>, which SHOULD be enough to allow measurement while preventing timing attack - see "Privacy and Security" section of [<a href="https://www.w3.org/TR/requestidlecallback/#bib-hr-time" rel="nofollow">HR-TIME</a>]. This value is calculated by performing the following steps:</p>
</blockquote>
<h3 dir="auto">Do you have anything more you want to share?</h3>
<p dir="auto">I have raised an issue on the polyfill to ask why it was implemented like this.</p>
<h3 dir="auto">MDN metadata</h3>

<details>
<summary>Page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/api/window/requestidlecallback</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/web/api/window/requestidlecallback/index.md">https://github.com/mdn/content/blob/main/files/en-us/web/api/window/requestidlecallback/index.md</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/bb8221e061bba27dbdbe5a3698b6c69febf0bc70/hovercard" href="https://github.com/mdn/content/commit/bb8221e061bba27dbdbe5a3698b6c69febf0bc70"><tt>bb8221e</tt></a></li>
<li>Document last modified: 2023-02-19T07:19:47.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[hr-time-3, performance-timeline-2, resource-timing-2, user-timing-2] Topic on setting HTTP priority of resource requests]]></title>
            <link>https://github.com/mdn/content/issues/14803</link>
            <guid>https://github.com/mdn/content/issues/14803</guid>
            <pubDate>Fri, 08 Apr 2022 02:53:08 GMT</pubDate>
            <content:encoded><![CDATA[<p dir="auto">When loading a page with many resources it can be useful to prioritize the requests so that the page appears to render more quickly. It would be useful to have a topic on this.</p>
<p dir="auto">There are a bunch of ways to do this:</p>
<ul dir="auto">
<li>Use <a href="/en-US/docs/Web/API/fetch"><code class="notranslate">fetch()</code></a> and set the priority in <a href="/en-US/docs/Web/API/Request/priority"><code class="notranslate">Request.priority</code></a>.</li>
<li>Set the HTTP priority on <a href="https://developer.mozilla.org//en-US/docs/Web/API/HTMLLinkElement/fetchpriority" rel="nofollow"><code class="notranslate">HTMLLinkElement</code></a>, <a href="https://developer.mozilla.org//en-US/docs/Web/API/HTMLIFrameElement/fetchpriority" rel="nofollow"><code class="notranslate">HTMLIFrameElement</code></a>, and <a href="https://developer.mozilla.org//en-US/docs/Web/API/HTMLImageElement/fetchpriority" rel="nofollow"><code class="notranslate">HTMLImageElement</code></a> elements (and associated tags) using the <code class="notranslate">fetchpriority</code> attribute.</li>
<li>In future maybe <a href="https://tools.ietf.org/id/draft-ietf-httpbis-priority-01.html" rel="nofollow">Priority</a> HTTP header. There are also some ideas (<a href="https://calibreapp.com/blog/critical-request" rel="nofollow">from here</a>), some of which may be relevant (e.g. marking the non-critical ones as <code class="notranslate">async</code>):</li>
<li>Mark non-critical scripts as async</li>
<li>Consider inlining <a class="user-mention notranslate" data-hovercard-type="organization" data-hovercard-url="/orgs/font-face/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/font-face">@font-face</a> declarations directly into HTML</li>
<li>Avoid using CSS background images or <a class="user-mention notranslate" data-hovercard-type="organization" data-hovercard-url="/orgs/import/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/import">@import</a></li>
<li>Use preload to retrieve critical resources earlier</li>
</ul>
<p dir="auto">Possible locations for such a page are under these:</p>
<ul dir="auto">
<li><a href="https://developer.mozilla.org/en-US/docs/Web/Performance" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/Performance</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/fetch" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/fetch</a> ?</li>
</ul>
<p dir="auto">This comes out of the discussion here: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1190042082" data-permission-text="Title is private" data-url="https://github.com/mdn/content/issues/14561" data-hovercard-type="issue" data-hovercard-url="/mdn/content/issues/14561/hovercard" href="https://github.com/mdn/content/issues/14561">#14561</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[hr-time-3] Issue with "performance.now()": Chrome, Firefox, and Safari are not spec compliant on certain platforms]]></title>
            <link>https://github.com/mdn/content/issues/4713</link>
            <guid>https://github.com/mdn/content/issues/4713</guid>
            <pubDate>Tue, 04 May 2021 18:23:13 GMT</pubDate>
            <content:encoded><![CDATA[<p dir="auto">MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/Performance/now" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/Performance/now</a></p>
<p dir="auto">I've edited this issue a number of times, because monotonic timing in browsers is a <em>deep</em> rabbit hole of standards, implementations, operating system clock APIs, and clock hardware (see <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="877952957" data-permission-text="Title is private" data-url="https://github.com/w3c/hr-time/issues/115" data-hovercard-type="issue" data-hovercard-url="/w3c/hr-time/issues/115/hovercard" href="https://github.com/w3c/hr-time/issues/115">w3c/hr-time#115</a>). The material below attempts to accurately and concisely document current browser behavior.</p>
<h4 dir="auto">What information was incorrect, unhelpful, or incomplete?</h4>
<p dir="auto">There are several components of the documentation that are outdated or incomplete.</p>
<h5 dir="auto">High Resolution Time vs. High Resolution Time Level 2</h5>
<p dir="auto">The semantics of <code class="notranslate">performance.now()</code> changed from the original High Resolution Time spec to the Level 2 spec. In the original spec, <code class="notranslate">performance.now()</code> was relative to <code class="notranslate">performance.timing.navigationStart</code> from the Navigation Timing spec. In the Level 2 spec, <code class="notranslate">performance.now()</code> is relative to <code class="notranslate">performance.timeOrigin</code>, which is defined in the spec.</p>
<p dir="auto">There are two key differences between these reference times.</p>
<ol dir="auto">
<li>The triggering conditions for <code class="notranslate">navigationStart</code> and <code class="notranslate">timeOrigin</code> are a little different. <code class="notranslate">navigationStart</code> timestamps a document fetch or an unload prompt (if any), while <code class="notranslate">timeOrigin</code> timestamps creation of the browsing context (if no prior document), an unload prompt (if any), or the start of navigation (as defined by the HTML spec, which is a few steps before fetch).</li>
<li><code class="notranslate">navigationStart</code> is set with the system clock, which might not be monotonic and might not be consistent across navigation events. <code class="notranslate">timeOrigin</code>, by contrast, is set with a shared monotonic clock that is defined to be monotonic, consistent across globals, and initially synced to the system clock (e.g., on browser startup). These properties means that comparing timestamps across webpages with the original spec (<code class="notranslate">performance.timing.navigationStart + performance.now()</code>) has clock change risks, while comparing timestamps across webpages with the Level 2 spec (<code class="notranslate">performance.timeOrigin + performance.now()</code>) doesn't have clock change risks.</li>
</ol>
<h5 dir="auto">Ticking During Sleep</h5>
<p dir="auto">The original High Resolution Time spec does not address whether <code class="notranslate">performance.now()</code> should tick during sleep. There was consensus for the Level 2 spec that <code class="notranslate">performance.now()</code> should tick during sleep (see <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="430536011" data-permission-text="Title is private" data-url="https://github.com/w3c/hr-time/issues/65" data-hovercard-type="issue" data-hovercard-url="/w3c/hr-time/issues/65/hovercard" href="https://github.com/w3c/hr-time/issues/65">w3c/hr-time#65</a>), but the text of the spec is somewhat ambiguous about sleep behavior and whether that's a normative requirement (see <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="877952957" data-permission-text="Title is private" data-url="https://github.com/w3c/hr-time/issues/115" data-hovercard-type="issue" data-hovercard-url="/w3c/hr-time/issues/115/hovercard" href="https://github.com/w3c/hr-time/issues/115">w3c/hr-time#115</a>).</p>
<p dir="auto">Here's a summary table of how browsers appear to currently handle sleep, where <g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png">✅</g-emoji> means <code class="notranslate">performance.now()</code> keeps ticking and <g-emoji class="g-emoji" alias="no_entry_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6ab.png">🚫</g-emoji> means it doesn't.</p>
<table role="table">
<thead>
<tr>
<th></th>
<th>Chrome/Chromium (<a href="https://bugs.chromium.org/p/chromium/issues/detail?id=1206450" rel="nofollow">bug</a>)</th>
<th>Firefox (<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1709767" rel="nofollow">bug</a>)</th>
<th>Safari/WebKit (<a href="https://bugs.webkit.org/show_bug.cgi?id=225610" rel="nofollow">bug</a>)</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Windows</strong></td>
<td><g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png">✅</g-emoji></td>
<td><g-emoji class="g-emoji" alias="white_check_mark" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png">✅</g-emoji></td>
<td>N/A</td>
</tr>
<tr>
<td><strong>macOS</strong></td>
<td><g-emoji class="g-emoji" alias="no_entry_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6ab.png">🚫</g-emoji></td>
<td><g-emoji class="g-emoji" alias="no_entry_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6ab.png">🚫</g-emoji></td>
<td><g-emoji class="g-emoji" alias="no_entry_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6ab.png">🚫</g-emoji></td>
</tr>
<tr>
<td><strong>Linux</strong></td>
<td><g-emoji class="g-emoji" alias="no_entry_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6ab.png">🚫</g-emoji></td>
<td><g-emoji class="g-emoji" alias="no_entry_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6ab.png">🚫</g-emoji></td>
<td><g-emoji class="g-emoji" alias="no_entry_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6ab.png">🚫</g-emoji> (except maybe WebKitGTK?)</td>
</tr>
<tr>
<td><strong>Android</strong></td>
<td><g-emoji class="g-emoji" alias="no_entry_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6ab.png">🚫</g-emoji></td>
<td><g-emoji class="g-emoji" alias="no_entry_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6ab.png">🚫</g-emoji></td>
<td>N/A</td>
</tr>
<tr>
<td><strong>iOS</strong></td>
<td>N/A (WebKit wrapper)</td>
<td>N/A (WebKit wrapper)</td>
<td><g-emoji class="g-emoji" alias="no_entry_sign" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f6ab.png">🚫</g-emoji></td>
</tr>
</tbody>
</table>
<h5 dir="auto">performance.timeOrigin in Chrome and Firefox</h5>
<p dir="auto">There is currently a <a href="https://bugs.chromium.org/p/chromium/issues/detail?id=1207386" rel="nofollow">bug</a> in Chrome where <code class="notranslate">performance.timeOrigin</code> is set for each global with the system clock rather than a shared monotonic clock. As a result, comparing High Resolution Time Level 2 timestamps across webpages in Chrome has clock change risks.</p>
<p dir="auto">There is also currently a <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1710762" rel="nofollow">bug</a> in Firefox where <code class="notranslate">performance.timeOrigin</code> is set with a monotonic clock that is synced to the system clock once per process, rather than with a shared monotonic clock that is synced to the system clock once on browser startup. The result is the same: comparing High Resolution Time Level 2 timestamps across webpages in Firefox has clock change risks.</p>
<h4 dir="auto">Clock Drift on macOS</h4>
<p dir="auto">The current macOS implementation of <code class="notranslate">performance.now()</code> in Chrome/Chromium, Firefox, and Safari/WebKit uses a monotonic clock that does not allow for even small, monotonic adjustments (e.g., NTP oscillator corrections). The result can be clock drift between the system clock and High Resolution Time monotonic clocks. Chrome has a <a href="https://bugs.chromium.org/p/chromium/issues/detail?id=948384" rel="nofollow">bug</a> open on this issue.</p>
<h4 dir="auto">Specific section or headline?</h4>
<p dir="auto">This content probably belongs in the general description of <code class="notranslate">performance.now()</code> because of the significant consequences. Components might also belong on the <code class="notranslate">performance.timeOrigin</code> and <code class="notranslate">DOMHighResTimeStamp</code> pages.</p>
<h4 dir="auto">What did you expect to see?</h4>
<ul dir="auto">
<li>The description is for High Resolution Time Level 2, but the example is for the original spec (referencing <code class="notranslate">performance.timing.navigationStart</code>). The page should probably include a description for both versions of the spec, examples for both versions of the spec, and an explanation of how the two versions differ, since the changes are subtle and Safari/WebKit hasn't implemented Level 2 yet.</li>
<li>A description of the browser- and platform-specific inconsistencies in sleep behavior, and what that could mean for use cases.</li>
<li>A mention of the Chrome and Firefox <code class="notranslate">performance.timeOrigin</code> bugs, and what those could mean for use cases.</li>
<li>A mention of the High Resolution Time clock drift behavior on macOS, and what that could mean for use cases.</li>
<li>An explicit indication that, while Safari/WebKit does support <code class="notranslate">performance.now()</code>, it has implemented the original High Resolution Time semantics and not the High Resolution Time Level 2 semantics.</li>
<li>Further explanation of the High Resolution Time Level 2 shared monotonic clock and per-document monotonic clock concepts would be valuable.</li>
</ul>
<h4 dir="auto">Did you test this? If so, how?</h4>
<p dir="auto">I've confirmed the following behaviors with both testing and code review:</p>
<ul dir="auto">
<li>Ticking During Sleep
<ul dir="auto">
<li>Chrome: Windows, macOS, Linux</li>
<li>Firefox: Windows, macOS, Linux</li>
<li>Safari: macOS</li>
</ul>
</li>
<li>Time Origin Set with the System Clock
<ul dir="auto">
<li>Chrome: macOS and Linux</li>
<li>Firefox: macOS and Linux</li>
</ul>
</li>
<li>Clock Drift on macOS
<ul dir="auto">
<li>Chrome: macOS</li>
<li>Firefox: macOS</li>
<li>Safari: macOS</li>
</ul>
</li>
</ul>

<details>
<summary>MDN Content page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/api/performance/now</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/Performance/now" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/Performance/now</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/web/api/performance/now/index.html">https://github.com/mdn/content/blob/main/files/en-us/web/api/performance/now/index.html</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/86a69ae6d141e4a5ec76217922cae3d50fbfde63/hovercard" href="https://github.com/mdn/content/commit/86a69ae6d141e4a5ec76217922cae3d50fbfde63"><tt>86a69ae</tt></a></li>
<li>Document last modified: 2021-04-08T14:56:01.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
    </channel>
</rss>