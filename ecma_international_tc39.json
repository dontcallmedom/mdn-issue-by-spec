{
    "version": "https://jsonfeed.org/version/1",
    "title": "Ecma International TC39-relevant MDN issues",
    "home_page_url": "https://dontcallmedom.github.io/mdn-issue-by-spec/ecma_international_tc39.rss",
    "description": "Issue filed on MDN Web Docs related to pages attached to technologies developed by Ecma International TC39",
    "author": {
        "name": "mdn-issue-by-spec",
        "url": "https://github.com/dontcallmedom/mdn-issue-by-spec"
    },
    "items": [
        {
            "id": "https://github.com/mdn/content/issues/35272",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#evaluation_order\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#evaluation_order</a></p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">The initializer is evaluated during instance creation, at the start of the constructor (for base classes) or immediately <strong>before</strong> the super() call returns (for derived classes).</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">The initializer is evaluated during instance creation, at the start of the constructor (for base classes) or immediately <strong>after</strong> the super() is fully executed (for derived classes).</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\">Only when parent class is fully executed  child class initializers starts evaluated and added fields to 'this'.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// The order of evaluation and initialization of fields in parent and child classes\n// Definition of ParentClassEvaluation\nclass ParentClassEvaluation {\n  // Step 1: The expression for the initializer of parentField is saved here.\n  parentField = &quot;parentIinitializer&quot;;\n  \n  // Step 2: Definition of the parent class constructor\n  constructor(firstName) {\n    // This is called during the creation of an instance.\n    // Evaluation of initializer: This is the moment when, during instance creation, the initializer expression is actually executed and the value is assigned to the field. Thus, at this stage, the initializer expression &quot;parentIinitializer&quot; is assigned to the parentField.\n    // this.parentField and this.firstName are available here.\n    this.firstName = firstName;\n    this.parentField = &quot;newParentField&quot;; // Here parentField is reassigned.\n  }\n}\n\n// Definition of ChildClassEvaluation (subclass of ParentClassEvaluation)\nclass ChildClassEvaluation extends ParentClassEvaluation {\n  // Step 3: The expression for the initializer of childField is saved here.\n  childField = &quot;childdInitializer&quot;;\n  \n  // Step 4: Definition of the child class constructor\n  constructor(firstName, secondName) {\n    // Step 5: super() is called to initialize the parent class\n    super(firstName);\n    \n    // this.parentField and this.firstName are already initialized and available.\n    // After returning from super(), the fields of the current class are initialized.\n    // Evaluation of initializer: This is the moment when, during instance creation, the initializer expression is actually executed and the value is assigned to the field. Thus, at this stage, the initializer expression &quot;childdInitializer&quot; is assigned to the childField.\n    // this.childField is available here.\n    this.secondName = secondName; // secondName is initialized.\n    this.childField = &quot;newChildField&quot;; // childField is reassigned here.\n  }\n}\n\n// Step 6: Creating an instance of ChildClassEvaluation\nconst instanceFromChildClassEvaluation = new ChildClassEvaluation('Vladimir', 'Borovikov');\n\n// Step 7: Output the instance to see the field values\nconsole.log(\n  &quot;instanceFromChildClassEvaluation&quot;,\n  instanceFromChildClassEvaluation\n);\n\n// it's the same to:\nfunction ParentConsructorEvaluation(firstname) {\n  this.parentField = &quot;parentIinitializer&quot;\n  this.first = firstname\n}\n\nfunction ChildConsructorEvaluation(firstname, secondName) {\n  ParentConsructorEvaluation.call(this, firstname) // only after parent constructor finished execution, child field are initialized\n  this.childField = &quot;childdInitializer&quot;;\n  this.second = secondName\n}\n\nconst instanceFromChildConstructorEvaluation = new ChildConsructorEvaluation('Vladimir', 'Borovikov');\n\nconsole.log('instanceFromChildConstructorEvaluation', instanceFromChildConstructorEvaluation)\"><pre class=\"notranslate\"><span class=\"pl-c\">// The order of evaluation and initialization of fields in parent and child classes</span>\n<span class=\"pl-c\">// Definition of ParentClassEvaluation</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">ParentClassEvaluation</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// Step 1: The expression for the initializer of parentField is saved here.</span>\n  <span class=\"pl-c1\">parentField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"parentIinitializer\"</span><span class=\"pl-kos\">;</span>\n  \n  <span class=\"pl-c\">// Step 2: Definition of the parent class constructor</span>\n  <span class=\"pl-en\">constructor</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">firstName</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// This is called during the creation of an instance.</span>\n    <span class=\"pl-c\">// Evaluation of initializer: This is the moment when, during instance creation, the initializer expression is actually executed and the value is assigned to the field. Thus, at this stage, the initializer expression \"parentIinitializer\" is assigned to the parentField.</span>\n    <span class=\"pl-c\">// this.parentField and this.firstName are available here.</span>\n    <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">firstName</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">firstName</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">parentField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"newParentField\"</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// Here parentField is reassigned.</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-c\">// Definition of ChildClassEvaluation (subclass of ParentClassEvaluation)</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">ChildClassEvaluation</span> <span class=\"pl-k\">extends</span> <span class=\"pl-v\">ParentClassEvaluation</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// Step 3: The expression for the initializer of childField is saved here.</span>\n  <span class=\"pl-c1\">childField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"childdInitializer\"</span><span class=\"pl-kos\">;</span>\n  \n  <span class=\"pl-c\">// Step 4: Definition of the child class constructor</span>\n  <span class=\"pl-en\">constructor</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">firstName</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">secondName</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// Step 5: super() is called to initialize the parent class</span>\n    <span class=\"pl-smi\">super</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">firstName</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    \n    <span class=\"pl-c\">// this.parentField and this.firstName are already initialized and available.</span>\n    <span class=\"pl-c\">// After returning from super(), the fields of the current class are initialized.</span>\n    <span class=\"pl-c\">// Evaluation of initializer: This is the moment when, during instance creation, the initializer expression is actually executed and the value is assigned to the field. Thus, at this stage, the initializer expression \"childdInitializer\" is assigned to the childField.</span>\n    <span class=\"pl-c\">// this.childField is available here.</span>\n    <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">secondName</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">secondName</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// secondName is initialized.</span>\n    <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">childField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"newChildField\"</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// childField is reassigned here.</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-c\">// Step 6: Creating an instance of ChildClassEvaluation</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">instanceFromChildClassEvaluation</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">ChildClassEvaluation</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Vladimir'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Borovikov'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// Step 7: Output the instance to see the field values</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span>\n  <span class=\"pl-s\">\"instanceFromChildClassEvaluation\"</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-s1\">instanceFromChildClassEvaluation</span>\n<span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// it's the same to:</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-v\">ParentConsructorEvaluation</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">firstname</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">parentField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"parentIinitializer\"</span>\n  <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">first</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">firstname</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">function</span> <span class=\"pl-v\">ChildConsructorEvaluation</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">firstname</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">secondName</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-v\">ParentConsructorEvaluation</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">call</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">this</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">firstname</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// only after parent constructor finished execution, child field are initialized</span>\n  <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">childField</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"childdInitializer\"</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">second</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">secondName</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">instanceFromChildConstructorEvaluation</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">ChildConsructorEvaluation</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Vladimir'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Borovikov'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'instanceFromChildConstructorEvaluation'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">instanceFromChildConstructorEvaluation</span><span class=\"pl-kos\">)</span></pre></div>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/classes</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/classes/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/classes/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/1b2c87c20466d2a3eec9b3551c269f9aff8f5762/hovercard\" href=\"https://github.com/mdn/content/commit/1b2c87c20466d2a3eec9b3551c269f9aff8f5762\"><tt>1b2c87c</tt></a></li>\n<li>Document last modified: 2024-07-25T21:53:55.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/35272",
            "title": "[ecmascript] Typo",
            "date_modified": "2024-08-01T19:30:16.000Z",
            "author": {
                "name": "iamvldmrbrvkv",
                "url": "https://github.com/iamvldmrbrvkv"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/34597",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultController/close\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultController/close</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Exceptions</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">The \"Exceptions\" section says:</p>\n<blockquote>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError\" rel=\"nofollow\">TypeError</a><br>\nThrown if the source object is not a ReadableStreamDefaultController.</p>\n</blockquote>\n<p dir=\"auto\">This suggests that errors are not thrown in other cases.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">I expect to see that a <code class=\"notranslate\">TypeError</code> may be thrown by this method if the stream is already in the process of closing or closed.</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><a href=\"https://streams.spec.whatwg.org/#rs-default-controller-close\" rel=\"nofollow\">https://streams.spec.whatwg.org/#rs-default-controller-close</a></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\">Similar issues exist for <code class=\"notranslate\">ReadableStreamDefaultController.enqueue</code> and probably methods on <code class=\"notranslate\">WritableStreamDefaultController</code> as well.</p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/api/readablestreamdefaultcontroller/close</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultController/close\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultController/close</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/api/readablestreamdefaultcontroller/close/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/api/readablestreamdefaultcontroller/close/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/d8b4431bfde42f1bc195239ea1f378d763f8163e/hovercard\" href=\"https://github.com/mdn/content/commit/d8b4431bfde42f1bc195239ea1f378d763f8163e\"><tt>d8b4431</tt></a></li>\n<li>Document last modified: 2024-04-22T06:16:40.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/34597",
            "title": "[ecmascript, streams] ReadableStreamDefaultController: undocumented error conditions",
            "date_modified": "2024-07-03T14:49:56.000Z",
            "author": {
                "name": "rotu",
                "url": "https://github.com/rotu"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/29572",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">That page mention import assertions, with the <code class=\"notranslate\">import ... assert { ... }</code> syntax.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">The proposal has been renamed to \"import attributes\", and the keyword has been replaced from <code class=\"notranslate\">assert</code> to <code class=\"notranslate\">with</code>. <code class=\"notranslate\">assert</code> is now \"deprecated and should not be relied upon\".</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><a href=\"https://tc39.es/proposal-import-attributes/\" rel=\"nofollow\">https://tc39.es/proposal-import-attributes/</a>, specifically <a href=\"https://tc39.es/proposal-import-attributes/#sec-deprecated-assert-keyword-for-import-attributes\" rel=\"nofollow\">https://tc39.es/proposal-import-attributes/#sec-deprecated-assert-keyword-for-import-attributes</a>.</p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\">Chrome is the only browser implementing <code class=\"notranslate\">assert</code> (and V8-based platforms).</p>\n<p dir=\"auto\">Chrome implements <code class=\"notranslate\">with</code> under a flag (and V8-based platforms), Safari implements <code class=\"notranslate\">with</code> in TP and Firefox is implementing it.</p>\n<p dir=\"auto\">The proposal update comes also with some semantic changes, however these details have never been documented so there is no change needed to the docs:</p>\n<ul dir=\"auto\">\n<li>invalid attribute keys are now disallowed, rather than silently ignored</li>\n<li>JSON and CSS modules are fetched with the appropriate HTTP headers (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1787684142\" data-permission-text=\"Title is private\" data-url=\"https://github.com/whatwg/html/issues/9486\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/whatwg/html/pull/9486/hovercard\" href=\"https://github.com/whatwg/html/pull/9486\">whatwg/html#9486</a>)</li>\n</ul>",
            "url": "https://github.com/mdn/content/issues/29572",
            "title": "[ecmascript] Import assertions proposal renamed to import attributes",
            "date_modified": "2023-10-10T08:50:02.000Z",
            "author": {
                "name": "nicolo-ribaudo",
                "url": "https://github.com/nicolo-ribaudo"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/28795",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Control flow effects of await</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">When an await is encountered in code (either in an async function or in a module), the awaited expression is executed, while all code that depends on the expression's value is paused and pushed into the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop\" rel=\"nofollow\">microtask queue</a>. The main thread is then freed for the next task in the event loop...</p>\n<p dir=\"auto\">For me, <em><strong>The main thread is then freed for the next task in the event loop</strong></em>, sounds like that next task from macrotask queue will be executed before any microtask that was pushed into the microtask queue.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">The main thread is then freed for the next task in the event loop which will be executed after any microtask e.g. code that depends on the expression's value.</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><a href=\"https://javascript.info/event-loop#macrotasks-and-microtasks\" rel=\"nofollow\">https://javascript.info/event-loop#macrotasks-and-microtasks</a></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/operators/await</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/3c33463072905e81ac620dd9780313369029b498/hovercard\" href=\"https://github.com/mdn/content/commit/3c33463072905e81ac620dd9780313369029b498\"><tt>3c33463</tt></a></li>\n<li>Document last modified: 2023-06-29T17:06:46.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/28795",
            "title": "[ecmascript] Macrotasks and Microtasks",
            "date_modified": "2023-08-28T09:55:38.000Z",
            "author": {
                "name": "a-brcic",
                "url": "https://github.com/a-brcic"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/24177",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Control flow effects of await</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<blockquote>\n<p dir=\"auto\">...all code that depends on the expression's value is paused and pushed into the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop\" rel=\"nofollow\">microtask queue</a>.</p>\n</blockquote>\n<p dir=\"auto\"><code class=\"notranslate\">await</code> does not inherently push anything into the microtask queue, at least not unless the promise being awaited is already settled.  The microtask queue is where promise tasks go after the promise is settled. <code class=\"notranslate\">await</code> simply pauses the function. The microtask of resuming the function is added to the queue when the promise ultimately settles.</p>\n<p dir=\"auto\">The \"microtask queue\" link to the EventLoop page also has no mention of the microtask queue.</p>\n<blockquote>\n<p dir=\"auto\">The main thread is then freed for the next task in the event loop. This happens even if the awaited value is an already-resolved promise or not a promise.</p>\n</blockquote>\n<p dir=\"auto\">This only happens if the promise is not already settled (or does not get settled within further execution of the current task). If settled, function continuation is added to the microtask queue and the current task of the event loop continues to run until its microtask queue is empty.  You can create an event loop-blocking async function demonstrating this</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// blocks the event loop\nasync function loop(){\n  await Promise.resolve()\n  loop()\n}\nloop()\"><pre class=\"notranslate\"><span class=\"pl-c\">// blocks the event loop</span>\n<span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">loop</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">await</span> <span class=\"pl-smi\">Promise</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-en\">loop</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-en\">loop</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">Despite the use of await, the main thread is not freed to run the next task.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">A more accurate description await and its interactions with the task and microtask queues.</p>\n<p dir=\"auto\"><del>The microtask link is probably better directed to:</del><br>\n<del><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide</a></del><br>\n(see comment below)</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide</a></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/operators/await</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/await/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/0e1f404f68142031b8f8d663af15ed6902352256/hovercard\" href=\"https://github.com/mdn/content/commit/0e1f404f68142031b8f8d663af15ed6902352256\"><tt>0e1f404</tt></a></li>\n<li>Document last modified: 2022-12-27T01:31:43.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/24177",
            "title": "[ecmascript] Misleading information around await's interaction with microtask/task queues",
            "date_modified": "2023-02-05T16:19:19.000Z",
            "author": {
                "name": "senocular",
                "url": "https://github.com/senocular"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/5006",
            "content_html": "<p dir=\"auto\">MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this</a></p>\n<h4 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h4>\n<p dir=\"auto\">I didn't know where exactly to post the issue. I went for \"this\" cause the value of \"this\" is strictly related to the execution context.</p>\n<h4 dir=\"auto\">Specific section or headline?</h4>\n<h4 dir=\"auto\">What did you expect to see?</h4>\n<h4 dir=\"auto\">Did you test this? If so, how?</h4>\n\n<details>\n<summary>MDN Content page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/javascript/reference/operators/this</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/this/index.html\">https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/this/index.html</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/13360cbad46b4ce6457f80492d73d2efd252e8a9/hovercard\" href=\"https://github.com/mdn/content/commit/13360cbad46b4ce6457f80492d73d2efd252e8a9\"><tt>13360cb</tt></a></li>\n<li>Document last modified: 2021-05-05T10:31:52.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/5006",
            "title": "[ecmascript] Need a page on Execution context",
            "date_modified": "2021-05-14T18:14:38.000Z",
            "author": {
                "name": "552020",
                "url": "https://github.com/552020"
            }
        }
    ]
}