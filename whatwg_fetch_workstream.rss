<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>WHATWG Fetch Workstream-relevant MDN issues</title>
        <link>https://dontcallmedom.github.io/mdn-issue-by-spec/whatwg_fetch_workstream.rss</link>
        <description>Issue filed on MDN Web Docs related to pages attached to technologies developed by WHATWG Fetch Workstream</description>
        <lastBuildDate>Fri, 16 Aug 2024 12:18:54 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[[fetch] Request's mode incorrectly documented]]></title>
            <link>https://github.com/mdn/content/issues/35488</link>
            <guid>https://github.com/mdn/content/issues/35488</guid>
            <pubDate>Fri, 16 Aug 2024 12:18:54 GMT</pubDate>
            <content:encoded><![CDATA[<p dir="auto">In <a href="https://developer.mozilla.org/en-US/docs/Web/API/Request/mode" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/Request/mode</a> it states</p>
<blockquote>
<p dir="auto">Prevents the method from being anything other than HEAD, GET or POST, and the headers from being anything other than <a href="https://developer.mozilla.org/en-US/docs/Glossary/CORS-safelisted_request_header" rel="nofollow">CORS-safelisted request headers</a>.</p>
</blockquote>
<p dir="auto">However, that is incorrect. The only no-CORS headers that are safelisted are here: <a href="https://fetch.spec.whatwg.org/#no-cors-safelisted-request-header-name" rel="nofollow">https://fetch.spec.whatwg.org/#no-cors-safelisted-request-header-name</a>. And that's a subset of the CORS-safelisted requested headers.</p>
<p dir="auto">This probably came to be when the <code class="notranslate">Range</code> header was added for CORS.</p>
<p dir="auto">Context: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1006456977" data-permission-text="Title is private" data-url="https://github.com/whatwg/fetch/issues/1310" data-hovercard-type="issue" data-hovercard-url="/whatwg/fetch/issues/1310/hovercard?comment_id=2293381855&amp;comment_type=issue_comment" href="https://github.com/whatwg/fetch/issues/1310#issuecomment-2293381855">whatwg/fetch#1310 (comment)</a>. Credit: <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/anson0370/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/anson0370">@anson0370</a>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[fetch] Missing Request constructor duplex option]]></title>
            <link>https://github.com/mdn/content/issues/31735</link>
            <guid>https://github.com/mdn/content/issues/31735</guid>
            <pubDate>Tue, 16 Jan 2024 01:34:58 GMT</pubDate>
            <content:encoded><![CDATA[<h3 dir="auto">MDN URL</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/API/Request/Request" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/Request/Request</a></p>
<h3 dir="auto">What specific section or headline is this issue about?</h3>
<p dir="auto">Parameters</p>
<h3 dir="auto">What information was incorrect, unhelpful, or incomplete?</h3>
<p dir="auto">The spec has a <code class="notranslate">duplex</code> option, but it's missing from the page</p>
<h3 dir="auto">What did you expect to see?</h3>
<p dir="auto">A note about the parameter, and that it needs to be set to <code class="notranslate">"half"</code> when using a <code class="notranslate">ReadableStream</code> body.</p>
<p dir="auto">It would also be nice to have a row for browser compatibility.</p>
<h3 dir="auto">Do you have any supporting links, references, or citations?</h3>
<p dir="auto">Spec: <a href="https://fetch.spec.whatwg.org/#request-class" rel="nofollow">https://fetch.spec.whatwg.org/#request-class</a><br>
Chrome docs (showing how to do half-duplex fetch): <a href="https://developer.chrome.com/docs/capabilities/web-apis/fetch-streaming-requests" rel="nofollow">https://developer.chrome.com/docs/capabilities/web-apis/fetch-streaming-requests</a><br>
Related web platform test: <a href="https://wpt.fyi/results/fetch/api/request/request-init-stream.any.html?label=master&amp;label=experimental&amp;aligned&amp;q=request-init-stream" rel="nofollow">https://wpt.fyi/results/fetch/api/request/request-init-stream.any.html?label=master&amp;label=experimental&amp;aligned&amp;q=request-init-stream</a></p>
<h3 dir="auto">Do you have anything more you want to share?</h3>
<p dir="auto">The <code class="notranslate">Request</code> class itself also has a <code class="notranslate">duplex</code> get-only property, so main page (<a href="https://developer.mozilla.org/en-US/docs/Web/API/Request" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/Request</a>) is affected and an instance property page is missing too</p>
<h3 dir="auto">MDN metadata</h3>

<details>
<summary>Page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/api/request</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/Request" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/Request</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/web/api/request/index.md">https://github.com/mdn/content/blob/main/files/en-us/web/api/request/index.md</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/261317e8b63f0e8923d38320639919569c4afe47/hovercard" href="https://github.com/mdn/content/commit/261317e8b63f0e8923d38320639919569c4afe47"><tt>261317e</tt></a></li>
<li>Document last modified: 2023-09-16T16:24:12.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[fetch] fetch could reject when 400 is returned]]></title>
            <link>https://github.com/mdn/content/issues/17115</link>
            <guid>https://github.com/mdn/content/issues/17115</guid>
            <pubDate>Wed, 08 Jun 2022 21:48:36 GMT</pubDate>
            <content:encoded><![CDATA[<h3 dir="auto">MDN URL</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/API/fetch" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/fetch</a></p>
<h3 dir="auto">What specific section or headline is this issue about?</h3>
<p dir="auto">Introduction and "Exceptions". At "Exceptions", the part about TypeError and the table listing all the reasons for it to happen. I didn't find anything that could justify my results in that list.</p>
<h3 dir="auto">What information was incorrect, unhelpful, or incomplete?</h3>
<blockquote>
<p dir="auto">A <a href="https://developer.mozilla.org/en-US/docs/Web/API/fetch" rel="nofollow">fetch()</a> promise only rejects when a network error is encountered (which is usually when there's a permissions issue or similar). A <a href="https://developer.mozilla.org/en-US/docs/Web/API/fetch" rel="nofollow">fetch()</a> promise does not reject on HTTP errors (404, etc.). Instead, a then() handler must check the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Response/ok" rel="nofollow">Response.ok</a> and/or <a href="https://developer.mozilla.org/en-US/docs/Web/API/Response/status" rel="nofollow">Response.status</a> properties.</p>
</blockquote>
<h3 dir="auto">What did you expect to see?</h3>
<p dir="auto">I was expecting to trigger the execution of my success callback inside <code class="notranslate">then()</code> since http errors 4xx and 5xx should not reject the fetch promise. Instead, the error callback was executed.</p>
<p dir="auto">It seems to me that the information in the fetch() and  Fetch API pages are incorrect or outdated. I've made some tests and found that fetch is indeed rejecting promises when 400 status code is returned. I didn't try other error codes.</p>
<h3 dir="auto">Do you have any supporting links, references, or citations?</h3>
<p dir="auto"><a href="https://stackoverflow.com/questions/45899931/typeerror-failed-to-fetch-trying-to-perform-an-post-request-on-api-hosted-on-he/72552340#72552340" rel="nofollow">https://stackoverflow.com/questions/45899931/typeerror-failed-to-fetch-trying-to-perform-an-post-request-on-api-hosted-on-he/72552340#72552340</a></p>
<p dir="auto"><a href="https://forum.freecodecamp.org/t/type-error-failed-to-fetch-when-using-fetch-api/456214/5" rel="nofollow">https://forum.freecodecamp.org/t/type-error-failed-to-fetch-when-using-fetch-api/456214/5</a></p>
<h3 dir="auto">Do you have anything more you want to share?</h3>
<p dir="auto">Here is my test:</p>
<ul dir="auto">
<li>Setup a server with some POST methods and respective OPTIONS methods to support preflight requests</li>
<li>Define some required field in the request body. If the request has the field, make your server return 200. Else, return 400.</li>
<li>Send a request with and without the field and check which callback is fired inside <code class="notranslate">then()</code>.</li>
</ul>
<p dir="auto">Request code example:</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="  function test_fetch(){
	  let message = JSON.stringify({
             // 'ids' is the expected field. Change it latter for 'id' or something else to see the error.
             ids: [1] 
	  })
  
	  fetch('http://your.api/get_data',{
		  method: 'post',
                  // Adding Content-Type header to enable preflight. 
                  // It's still not working even with normal(no-preflight) requests.
                  // To test with normal instead of preflight requests,
                  // remove the line below from the fetch options object and
                  // make sure your server can handle text/plain data or else
                  // you may face some error due to wrong parsing of request body.
		  headers: {'Content-Type': 'application/json'},
		  body: message
	  })
	  .then(data =&gt; console.log('success'),data =&gt; console.log('error'))
  }"><pre class="notranslate">  <span class="pl-k">function</span> <span class="pl-en">test_fetch</span><span class="pl-kos">(</span><span class="pl-kos">)</span><span class="pl-kos">{</span>
	  <span class="pl-k">let</span> <span class="pl-s1">message</span> <span class="pl-c1">=</span> <span class="pl-c1">JSON</span><span class="pl-kos">.</span><span class="pl-en">stringify</span><span class="pl-kos">(</span><span class="pl-kos">{</span>
             <span class="pl-c">// 'ids' is the expected field. Change it latter for 'id' or something else to see the error.</span>
             <span class="pl-c1">ids</span>: <span class="pl-kos">[</span><span class="pl-c1">1</span><span class="pl-kos">]</span> 
	  <span class="pl-kos">}</span><span class="pl-kos">)</span>
  
	  <span class="pl-en">fetch</span><span class="pl-kos">(</span><span class="pl-s">'http://your.api/get_data'</span><span class="pl-kos">,</span><span class="pl-kos">{</span>
		  <span class="pl-c1">method</span>: <span class="pl-s">'post'</span><span class="pl-kos">,</span>
                  <span class="pl-c">// Adding Content-Type header to enable preflight. </span>
                  <span class="pl-c">// It's still not working even with normal(no-preflight) requests.</span>
                  <span class="pl-c">// To test with normal instead of preflight requests,</span>
                  <span class="pl-c">// remove the line below from the fetch options object and</span>
                  <span class="pl-c">// make sure your server can handle text/plain data or else</span>
                  <span class="pl-c">// you may face some error due to wrong parsing of request body.</span>
		  <span class="pl-c1">headers</span>: <span class="pl-kos">{</span><span class="pl-s">'Content-Type'</span>: <span class="pl-s">'application/json'</span><span class="pl-kos">}</span><span class="pl-kos">,</span>
		  <span class="pl-c1">body</span>: <span class="pl-s1">message</span>
	  <span class="pl-kos">}</span><span class="pl-kos">)</span>
	  <span class="pl-kos">.</span><span class="pl-en">then</span><span class="pl-kos">(</span><span class="pl-s1">data</span> <span class="pl-c1">=&gt;</span> <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s">'success'</span><span class="pl-kos">)</span><span class="pl-kos">,</span><span class="pl-s1">data</span> <span class="pl-c1">=&gt;</span> <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s">'error'</span><span class="pl-kos">)</span><span class="pl-kos">)</span>
  <span class="pl-kos">}</span></pre></div>
<p dir="auto">I've tested in <code class="notranslate">Chrome, version 102.0.5005.61 (Official Build) (64-bit)</code> and <code class="notranslate">Firefox, version 75.0 (64-bit)</code>. Got the same unexpected behaviour in both.</p>
<h3 dir="auto">MDN metadata</h3>

<details>
<summary>Page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/api/fetch</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/fetch" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/fetch</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/web/api/fetch/index.md">https://github.com/mdn/content/blob/main/files/en-us/web/api/fetch/index.md</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/196cc4ff3068a59b962a3fe1cbb960eb72ef542b/hovercard" href="https://github.com/mdn/content/commit/196cc4ff3068a59b962a3fe1cbb960eb72ef542b"><tt>196cc4f</tt></a></li>
<li>Document last modified: 2022-05-31T04:47:00.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
    </channel>
</rss>