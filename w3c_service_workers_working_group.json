{
    "version": "https://jsonfeed.org/version/1",
    "title": "W3C Service Workers Working Group-relevant MDN issues",
    "home_page_url": "https://dontcallmedom.github.io/mdn-issue-by-spec/w3c_service_workers_working_group.rss",
    "description": "Issue filed on MDN Web Docs related to pages attached to technologies developed by W3C Service Workers Working Group",
    "author": {
        "name": "mdn-issue-by-spec",
        "url": "https://github.com/dontcallmedom/mdn-issue-by-spec"
    },
    "items": [
        {
            "id": "https://github.com/mdn/content/issues/9362",
            "content_html": "<h2>What page(s) did you find the problem on?</h2>\n<p>Compare the descriptions of parameters here:<br>\n<a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/show\">https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/show</a><br>\n<a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequestUpdateEvent/updateWith\">https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequestUpdateEvent/updateWith</a></p>\n<h2>What is the problem?</h2>\n<p><code>PaymentRequest</code>'s <code>show()</code> method is documented as taking a promise, while <code>PaymentRequestUpdateEvent</code>'s <code>updateWith()</code> method is documented as taking an object. Actually, the two both accept the same kind of parameter, and because of the way that promises work, one can pass either an object directly or a promise that resolves to an object.</p>\n<h2>What did you expect to see?</h2>\n<p>A consistent style that makes it clear what can be used as the argument.</p>\n<p>Promises as parameters is not very common on the web platform, but there are other cases that also have a mix of styles:</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequestEvent/respondWith\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequestEvent/respondWith</a> (also incorrectly says the <code>PaymentResponse</code> interface instead of the <code>PaymentHandlerResponse</code> dictionary)</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ExtendableEvent/waitUntil\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/ExtendableEvent/waitUntil</a> (no issue here because the promise can resolve to anything)</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent/respondWith\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/FetchEvent/respondWith</a> (correctly says \"<code>Response</code> or a <code>Promise</code> that resolves to a <code>Response</code>\")</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/compileStreaming\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/compileStreaming</a> (correctly says \"<code>Response</code> object or a promise that will fulfill with one\")</li>\n</ul>",
            "url": "https://github.com/mdn/content/issues/9362",
            "title": "[service-workers-1, payment-request, payment-handler] Content bug: inconsistent/incomplete descriptions of Promises as parameters",
            "date_modified": "2021-09-30T07:19:46.000Z",
            "author": {
                "name": "foolip",
                "url": "https://github.com/foolip"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/8977",
            "content_html": "<p>A big step forward was made in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"980067493\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/8351\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mdn/content/pull/8351/hovercard\" href=\"https://github.com/mdn/content/pull/8351\">#8351</a>, but I'd like to propose this rule to page naming:</p>\n<ol>\n<li>If the item is available on the global, use the name. Eg:\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/skipWaiting\" rel=\"nofollow\"><code>ServiceWorkerGlobalScope.skipWaiting</code></a> becomes <code>skipWaiting</code>.</li>\n</ul>\n</li>\n<li>If the item is typically reached via properties reachable from the global, use that property chain, omitting the global.\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\" rel=\"nofollow\"><code>Document.querySelector</code></a> becomes <code>document.querySelector</code>.</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CacheStorage/match\" rel=\"nofollow\"><code>CacheStorage.match</code></a> becomes <code>caches.match</code>.</li>\n</ul>\n</li>\n<li>If the item is an instance method/property, use the constructor name with the first set of caps lower-cased + the property name.\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\" rel=\"nofollow\"><code>Element.getBoundingClientRect</code></a> becomes <code>element.getBoundingClientRect</code>.</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight\" rel=\"nofollow\"><code>HTMLElement.offsetHeight</code></a> becomes <code>htmlElement.offsetHeight</code>.</li>\n</ul>\n</li>\n<li>If the item is a static method/property, use the constructor name + the property name.\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\" rel=\"nofollow\"><code>Notification.requestPermission</code></a> remains <code>Notification.requestPermission</code>.</li>\n</ul>\n</li>\n<li>Otherwise, just use the name.\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent\" rel=\"nofollow\"><code>PointerEvent</code></a> remains <code>PointerEvent</code></li>\n</ul>\n</li>\n</ol>",
            "url": "https://github.com/mdn/content/issues/8977",
            "title": "[cssom-view-1, dom, notifications, service-workers-1, pointerevents3] Better naming of pages",
            "date_modified": "2021-09-16T10:09:38.000Z",
            "author": {
                "name": "jakearchibald",
                "url": "https://github.com/jakearchibald"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/7760",
            "content_html": "<p>MDN URL: <a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/updateViaCache\">https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/updateViaCache</a></p>\n<h4>What information was incorrect, unhelpful, or incomplete?</h4>\n<p>This is not a method, it's a string typed property</p>\n<h4>Specific section or headline?</h4>\n<p>all</p>\n<h4>What did you expect to see?</h4>\n<p>Description of property. It reflects the value of updateViaCache property of the options-Parameter in register(). The value of the property affects the behaviour of a ServiceWorker update.</p>\n<h4>Did you test this? If so, how?</h4>\n<p>(1) Register a serviceworker, set a breakpoint, inspect the ServiceWorkerRegistration object<br>\n(2) Read the spec - V1 and nightly</p>\n<p>Sorry that I don't create a pull request. But I don't want to become a MDN author, because of lack of expertise AND time.</p>\n\n<details>\n<summary>MDN Content page report details</summary>\n<ul>\n<li>Folder: <code>en-us/web/api/serviceworkerregistration/updateviacache</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/updateViaCache\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/updateViaCache</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/api/serviceworkerregistration/updateviacache/index.html\">https://github.com/mdn/content/blob/main/files/en-us/web/api/serviceworkerregistration/updateviacache/index.html</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/cad672e1d7ab78a63f60a5d79914520b1486b534/hovercard\" href=\"https://github.com/mdn/content/commit/cad672e1d7ab78a63f60a5d79914520b1486b534\"><tt>cad672e</tt></a></li>\n<li>Document last modified: 2021-07-29T14:32:30.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/7760",
            "title": "[service-workers-1] Issue with \"ServiceWorkerRegistration.updateViaCache\": (short summary here please)",
            "date_modified": "2021-08-09T11:52:16.000Z",
            "author": {
                "name": "Rolf-B",
                "url": "https://github.com/Rolf-B"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/7593",
            "content_html": "<p>MDN URL: <a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker\">https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker</a></p>\n<h4>What information was incorrect, unhelpful, or incomplete?</h4>\n<p>You claim that ServiceWorker inherits from Worker. The spec says otherwise, it inherits from EventTarget. A ServiceWorker <strong>is not</strong> a Worker. Messages arrive at the ServiceWorkerGlobalScope, not the ServiceWorker itself. Yes, it's strange, but that's what the spec says.</p>\n<h4>Specific section or headline?</h4>\n<ul>\n<li>Properties<br>\nThe ServiceWorker interface inherits properties from its parent, Worker.</li>\n</ul>\n<p><em>The error isn't obvious, because Worker has no own properties and inherits them from EventTarget, but Worker is still not the parent</em></p>\n<ul>\n<li>\n<p>Methods<br>\nThe ServiceWorker interface inherits methods from its parent, Worker, with the exception of Worker.terminate</p>\n<ul>\n<li><em>As far as I know, selective inheritance is not a thing in IDL or JavaScript</em></li>\n<li><em>Yes, Worker has a postMessage and a terminate method, and ServiceWorker has a postMessage method. But no, ServiceWorker doesn't inherit it. The procedures in the HTML and ServiceWorker specs are similar, but not identical.</em></li>\n</ul>\n</li>\n</ul>\n<h4>What did you expect to see?</h4>\n<p>A description that conforms to the spec. But I'm not familiar enough with the topic to rewrite this.</p>\n<h4>Did you test this? If so, how?</h4>\n<p>I checked the prototype chain in Chrome DevTools. It's ServiceWorker -&gt; EventTarget</p>\n\n<details>\n<summary>MDN Content page report details</summary>\n<ul>\n<li>Folder: <code>en-us/web/api/serviceworker</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/api/serviceworker/index.html\">https://github.com/mdn/content/blob/main/files/en-us/web/api/serviceworker/index.html</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/642d6eb7feb73e17cfc1ef61d3d09c2d200e65ca/hovercard\" href=\"https://github.com/mdn/content/commit/642d6eb7feb73e17cfc1ef61d3d09c2d200e65ca\"><tt>642d6eb</tt></a></li>\n<li>Document last modified: 2021-06-17T03:52:55.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/7593",
            "title": "[service-workers-1] Issue with \"ServiceWorker\": wrong parentage; should explicitly list postMessage() ",
            "date_modified": "2021-08-04T17:16:23.000Z",
            "author": {
                "name": "Rolf-B",
                "url": "https://github.com/Rolf-B"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/7138",
            "content_html": "<p>MDN URL: <a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register\">https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register</a></p>\n<h4>What information was incorrect, unhelpful, or incomplete?</h4>\n<p>I assumed (wrongly) from this that registering an already-registered worker would be a no-op. It turns out that it at least causes a network request for the worker, and that request doesn't go via the cache even if you have <code>updateViaCache: 'all'</code> (which makes sense). So regardless of your update mode, not checking for an existing registration will cause extra server load.</p>\n<h4>Specific section or headline?</h4>\n<blockquote>\n<p>You can call this method unconditionally from the controlled page. I.e., you don't need to first check whether there's an active registration.</p>\n</blockquote>\n<h4>What did you expect to see?</h4>\n<p>More detailed info about why I might <em>want</em> to check for an existing registration, even if I don't <em>need</em> to.</p>\n<h4>Did you test this? If so, how?</h4>\n<p>Yes, looking at request headers in Fiddler.</p>\n\n<details>\n<summary>MDN Content page report details</summary>\n<ul>\n<li>Folder: <code>en-us/web/api/serviceworkercontainer/register</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/register</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/api/serviceworkercontainer/register/index.html\">https://github.com/mdn/content/blob/main/files/en-us/web/api/serviceworkercontainer/register/index.html</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/642d6eb7feb73e17cfc1ef61d3d09c2d200e65ca/hovercard\" href=\"https://github.com/mdn/content/commit/642d6eb7feb73e17cfc1ef61d3d09c2d200e65ca\"><tt>642d6eb</tt></a></li>\n<li>Document last modified: 2021-06-17T03:52:55.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/7138",
            "title": "[service-workers-1] Issue with \"ServiceWorkerContainer.register()\": may be advisable to check for an existing registration",
            "date_modified": "2021-07-21T16:35:44.000Z",
            "author": {
                "name": "robatwilliams",
                "url": "https://github.com/robatwilliams"
            }
        }
    ]
}