{
    "version": "https://jsonfeed.org/version/1",
    "title": "WHATWG Streams Workstream-relevant MDN issues",
    "home_page_url": "https://dontcallmedom.github.io/mdn-issue-by-spec/whatwg_streams_workstream.rss",
    "description": "Issue filed on MDN Web Docs related to pages attached to technologies developed by WHATWG Streams Workstream",
    "author": {
        "name": "mdn-issue-by-spec",
        "url": "https://github.com/dontcallmedom/mdn-issue-by-spec"
    },
    "items": [
        {
            "id": "https://github.com/mdn/content/issues/23299",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">The example</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">The example is this one:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"fetch('https://www.example.org')\n  .then((response) =&gt; response.body)\n  .then((rb) =&gt; {\n    const reader = rb.getReader();\n\n    return new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // &quot;done&quot; is a Boolean and value a &quot;Uint8Array&quot;\n          reader.read().then(({ done, value }) =&gt; {\n            // If there is no more data to read\n            if (done) {\n              console.log('done', done);\n              controller.close();\n              return;\n            }\n            // Get the data and send it to the browser via the controller\n            controller.enqueue(value);\n            // Check chunks by logging to the console\n            console.log(done, value);\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n  })\n  .then((stream) =&gt;\n    // Respond with our stream\n    new Response(stream, { headers: { 'Content-Type': 'text/html' } }).text()\n  )\n  .then((result) =&gt; {\n    // Do things with result\n    console.log(result);\n  });\n\"><pre lang=\"js\" class=\"notranslate\"><code class=\"notranslate\">fetch('https://www.example.org')\n  .then((response) =&gt; response.body)\n  .then((rb) =&gt; {\n    const reader = rb.getReader();\n\n    return new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) =&gt; {\n            // If there is no more data to read\n            if (done) {\n              console.log('done', done);\n              controller.close();\n              return;\n            }\n            // Get the data and send it to the browser via the controller\n            controller.enqueue(value);\n            // Check chunks by logging to the console\n            console.log(done, value);\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n  })\n  .then((stream) =&gt;\n    // Respond with our stream\n    new Response(stream, { headers: { 'Content-Type': 'text/html' } }).text()\n  )\n  .then((result) =&gt; {\n    // Do things with result\n    console.log(result);\n  });\n\n</code></pre></div>\n<p dir=\"auto\">I found it confusing because it is mixing both the <strong>how to consume</strong> and <strong>how to produce</strong> a Stream if I am correct.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">As a person that is learning I don't really get from here a recipe for using it. Wouldn't it be better to split this into two pieces, one where it is shown how to read, and other where - maybe a server - creates a Stream for a Response ?</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\">I may just be misunderstanding the example.</p>\n<p dir=\"auto\">Thanks for the patience !</p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/api/readablestream</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/api/readablestream/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/api/readablestream/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/06105598d11001e9f12d80ad05087f1df3c0634b/hovercard\" href=\"https://github.com/mdn/content/commit/06105598d11001e9f12d80ad05087f1df3c0634b\"><tt>0610559</tt></a></li>\n<li>Document last modified: 2022-10-10T09:00:13.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/23299",
            "title": "[streams] ReadableStream example mixes creation and consumption",
            "date_modified": "2023-01-01T13:20:04.000Z",
            "author": {
                "name": "santimirandarp",
                "url": "https://github.com/santimirandarp"
            }
        }
    ]
}