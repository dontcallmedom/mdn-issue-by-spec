{
    "version": "https://jsonfeed.org/version/1",
    "title": "W3C Web Real-Time Communications Working Group-relevant MDN issues",
    "home_page_url": "https://dontcallmedom.github.io/mdn-issue-by-spec/w3c_web_real_time_communications_working_group.rss",
    "description": "Issue filed on MDN Web Docs related to pages attached to technologies developed by W3C Web Real-Time Communications Working Group",
    "author": {
        "name": "mdn-issue-by-spec",
        "url": "https://github.com/dontcallmedom/mdn-issue-by-spec"
    },
    "items": [
        {
            "id": "https://github.com/mdn/content/issues/24387",
            "content_html": "<h2 dir=\"auto\">Acceptance Criteria</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> The listed features are documented sufficiently on MDN</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> BCD is updated</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Interactive example and data repos are updated if appropriate</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> The content has been reviewed as needed</li>\n</ul>\n<h3 dir=\"auto\">For folks helping with Firefox related documentation</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Set bugs to <code class=\"notranslate\">dev-doc-complete</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Add entry to Firefox release notes if feature is enabled in release</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Add entry to Firefox experimental features page if feature is not yet enabled in release</li>\n</ul>\n<h2 dir=\"auto\">Features to document</h2>\n<p dir=\"auto\"><a href=\"https://w3c.github.io/mediacapture-output/\" rel=\"nofollow\">https://w3c.github.io/mediacapture-output/</a></p>\n<p dir=\"auto\">Looks like we have both additions:</p>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/setSinkId\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/setSinkId</a><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/selectAudioOutput\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/selectAudioOutput</a></p>\n<p dir=\"auto\">We should probably have an API overview page for it, but due to the size of this months project we may not have time.</p>\n<h2 dir=\"auto\">Related Gecko bugs</h2>\n<p dir=\"auto\"><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1794961\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1794961</a></p>\n<h2 dir=\"auto\">Other</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Check content open issues to see if any pertain to the subject matter. If there are any that can be closed because of the work, do so. If there are any that can be fixed relatively quickly because of the knowledge from completing this issue and you have time, feel free to go ahead and fix them.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Check if glossary updates are required for the feature you're documenting - whether an existing term needs to be updated or a new term should be added.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Check if BCD update means that content pages need to have experimental markup removed or deprecated markup added (front matter tags and macros).</li>\n</ul>",
            "url": "https://github.com/mdn/content/issues/24387",
            "title": "[audio-output] [Web API] enable Audio Output Devices API on nightly",
            "date_modified": "2023-02-13T14:36:15.000Z",
            "author": {
                "name": "Rumyra",
                "url": "https://github.com/Rumyra"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/23993",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/generateCertificate\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/generateCertificate</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">I think i want to use <code class=\"notranslate\">RTCPeerConnection.generateCertificate()</code> for something? but i'm not really sure what it's really good for...<br>\nIt says you can store the certificate in IndexedDB.</p>\n<p dir=\"auto\">But why do you want to generate your own certificate and store it in IndexedDB instead of generating a new one each time?</p>\n<p dir=\"auto\">Can the SDP offer/answer be more deterministic so that you can re-establish a closed RTCPeerConnection without having to send the signal back and forth after a connection is closed?</p>\n<p dir=\"auto\">Would it be a huge benefit if i needed to connect to many peers and create some kind of mesh network and used the same certificate where many peers joins/leaves all the time?</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">More/better use cases of why you want to use this. and how to use it.</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/api/rtcpeerconnection/generatecertificate</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/generateCertificate\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/generateCertificate</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcpeerconnection/generatecertificate/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcpeerconnection/generatecertificate/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/e853d95ba1b2acec653c6876492de187f76cad57/hovercard\" href=\"https://github.com/mdn/content/commit/e853d95ba1b2acec653c6876492de187f76cad57\"><tt>e853d95</tt></a></li>\n<li>Document last modified: 2022-11-15T01:46:22.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/23993",
            "title": "[webrtc] What is `RTCPeerConnection.generateCertificate(..)` good for?",
            "date_modified": "2023-01-30T20:28:26.000Z",
            "author": {
                "name": "jimmywarting",
                "url": "https://github.com/jimmywarting"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/22962",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Syntax</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">The <code class=\"notranslate\">constraints</code> parameter is not described except through some examples. In particular, I have no idea what values are valid for the \"audio\" attribute except for \"true\" that I saw in the example.</p>\n<p dir=\"auto\">From other sources I know I can use \"echoCancellation\" but I think that has some options and I have no idea what they are or how to know if they are supported.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">I'd like the word \"constraints\" to be a link to a page that describes all of the possible options. Note - this wouldn't be as important if I could find that information somewhere else but I've been searching for it and don't see it.</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\">My particular issue is that I'm trying to make this work on iPhone 14 and I'd like to know what values are valid for that device.</p>\n<p dir=\"auto\">Since I'm trying to get this to work in as many devices as possible, I'd like to know what the device and browser differences are so I wish there were a resource that listed what options work on what devices.</p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/api/mediadevices/getusermedia</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/api/mediadevices/getusermedia/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/api/mediadevices/getusermedia/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/af967bb052695baa631c004b9b149c6f91920776/hovercard\" href=\"https://github.com/mdn/content/commit/af967bb052695baa631c004b9b149c6f91920776\"><tt>af967bb</tt></a></li>\n<li>Document last modified: 2022-12-12T20:23:34.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/22962",
            "title": "[mediacapture-streams] Missing description of getUserMedia constraints.",
            "date_modified": "2022-12-14T20:17:55.000Z",
            "author": {
                "name": "paulrosen",
                "url": "https://github.com/paulrosen"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/20134",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">Using certificates</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">Section contains visible todo comment \"&lt;&lt;&lt;--- add link to information about identity ---&gt;&gt;&gt;\"</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">The comment should either be hidden or said link should be provided</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/api/rtcpeerconnection/rtcpeerconnection</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcpeerconnection/rtcpeerconnection/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcpeerconnection/rtcpeerconnection/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/59d036cd686d9715c1cb9f3157a2a8545ea13882/hovercard\" href=\"https://github.com/mdn/content/commit/59d036cd686d9715c1cb9f3157a2a8545ea13882\"><tt>59d036c</tt></a></li>\n<li>Document last modified: 2022-06-11T04:12:24.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/20134",
            "title": "[webrtc] Possibly missing information in WebRTC config section about certificates",
            "date_modified": "2022-08-30T19:08:41.000Z",
            "author": {
                "name": "martinpetrovaj",
                "url": "https://github.com/martinpetrovaj"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/19369",
            "content_html": "<h3 dir=\"auto\">MDN URL</h3>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/dataavailable_event\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/dataavailable_event</a></p>\n<h3 dir=\"auto\">What specific section or headline is this issue about?</h3>\n<p dir=\"auto\">First section, fourth bullet point about the timeslice parameter</p>\n<h3 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h3>\n<p dir=\"auto\">The documentation currently says this:</p>\n<blockquote>\n<p dir=\"auto\">If a timeslice property was passed into the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/start\" rel=\"nofollow\">MediaRecorder.start()</a> method that started media capture, a dataavailable event is fired every timeslice milliseconds.</p>\n</blockquote>\n<p dir=\"auto\">However, I used to record videos with a MediaRecorder like this (in vuejs):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"startRecording: function () {\n    this.recorder = new MediaRecorder(this.streamSrc, {mimeType: &quot;video/webm;codecs:vp8&quot;});\n    this.recorder.ondataavailable = this.onData;\n    this.recorder.start(500);\n},\nonData: function (event) {\n    // append the latest chunk of video data to an array\n    this.chunks.push(event.data);\n    this.duration = this.chunks.length * 500 / 1000;\n}\"><pre lang=\"js\" class=\"notranslate\"><code class=\"notranslate\">startRecording: function () {\n    this.recorder = new MediaRecorder(this.streamSrc, {mimeType: \"video/webm;codecs:vp8\"});\n    this.recorder.ondataavailable = this.onData;\n    this.recorder.start(500);\n},\nonData: function (event) {\n    // append the latest chunk of video data to an array\n    this.chunks.push(event.data);\n    this.duration = this.chunks.length * 500 / 1000;\n}\n</code></pre></div>\n<p dir=\"auto\">and expected each blob emitted to the <code class=\"notranslate\">onData</code> handler to contain exactly 500 ms of video. Hence, I simply used the length of the array to show the total recorded video duration to the user.</p>\n<p dir=\"auto\">As it turns out, the computed duration would accumulate a substantial drift from the real duration as the video got longer. After around 10 minutes of video, the displayed <code class=\"notranslate\">duration</code> value would differ from the actual video duration by multiple seconds.<br>\nI ended up implementing my own \"stopwatch\" to keep track of the recorded duration, which works much more accurately.</p>\n<p dir=\"auto\">From my understanding of how video codecs work, I imagine it's hard to make a sensible \"cut\" precisely after a given <code class=\"notranslate\">timeslice</code> value and that's perhaps why we cannot rely on emitted blobs to have exactly the specified duration.</p>\n<h3 dir=\"auto\">What did you expect to see?</h3>\n<p dir=\"auto\">If my usage of the <code class=\"notranslate\">timeslice</code> option and the assumption about video codecs is correct, I would suggest to adapt the documentation in a way to reflect this.</p>\n<p dir=\"auto\">From reading the current description, I thought the blob duration was reliable and had to spend effort debugging it when it wasn't.</p>\n<h3 dir=\"auto\">Do you have any supporting links, references, or citations?</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Do you have anything more you want to share?</h3>\n<p dir=\"auto\">I observed the described behaviour in Firefox and Chrome and suspect other browsers to behave the same way.</p>\n<h3 dir=\"auto\">MDN metadata</h3>\n\n<details>\n<summary>Page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/api/mediarecorder/dataavailable_event</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/dataavailable_event\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/dataavailable_event</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/api/mediarecorder/dataavailable_event/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/api/mediarecorder/dataavailable_event/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/542ec1e002ae3c340f0925adfd1f0d870c14ff32/hovercard\" href=\"https://github.com/mdn/content/commit/542ec1e002ae3c340f0925adfd1f0d870c14ff32\"><tt>542ec1e</tt></a></li>\n<li>Document last modified: 2022-08-09T12:24:48.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/19369",
            "title": "[mediastream-recording] Emitted blobs do not always exactly adhere to the timeslice value",
            "date_modified": "2022-08-10T14:39:46.000Z",
            "author": {
                "name": "fritjofbuettner",
                "url": "https://github.com/fritjofbuettner"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/13463",
            "content_html": "<h2 dir=\"auto\">What page(s) did you find the problem on?</h2>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/toJSON\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/toJSON</a></p>\n<h2 dir=\"auto\">Specific page section or heading?</h2>\n<p dir=\"auto\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo</a></p>\n<h2 dir=\"auto\">What is the problem?</h2>\n<p dir=\"auto\">On above MediaDeviceInfo page, I was looking what toJSON() did. I searched and found <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/toJSON\" rel=\"nofollow\">toJSON()</a> -- it links to page but gives page not found error</p>\n<h2 dir=\"auto\">What did you expect to see?</h2>\n<p dir=\"auto\">A page saying what toJSON() would do or saying it was deprecated which may be the case.</p>\n<h2 dir=\"auto\">Did you test this? If so, how?</h2>\n<p dir=\"auto\">Clicking thru above links to this page <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/toJSON\" rel=\"nofollow\">toJSON()</a></p>",
            "url": "https://github.com/mdn/content/issues/13463",
            "title": "[mediacapture-streams] MediaDeviceInfo»toJSON() needs to be documented",
            "date_modified": "2022-03-03T18:40:42.000Z",
            "author": {
                "name": "jsmithdev",
                "url": "https://github.com/jsmithdev"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/10020",
            "content_html": "<p dir=\"auto\">Originally from <a aria-label=\"Pull request #9748\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1023721513\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mdn/content/issues/9748\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mdn/content/pull/9748/hovercard?comment_id=733866073&amp;comment_type=review_comment\" href=\"https://github.com/mdn/content/pull/9748#discussion_r733866073\">#9748 (comment)</a>.</p>\n<p dir=\"auto\">The <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Using_DTMF\" rel=\"nofollow\">Using DTMF</a> page in the WebRTC docs is using the <code class=\"notranslate\">offerToReceiveAudio</code> and <code class=\"notranslate\">offerToReceiveVideo</code> options, which in the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer\" rel=\"nofollow\"><code class=\"notranslate\">RTCPeerConnection.createOffer()</code></a> docs are described as \"legacy\":</p>\n<blockquote>\n<p dir=\"auto\">You shouldn't use this legacy property. Instead, use RTCRtpTransceiver to control whether or not to accept incoming audio.</p>\n</blockquote>",
            "url": "https://github.com/mdn/content/issues/10020",
            "title": "[webrtc] \"Using DTMF\" is using legacy APIs",
            "date_modified": "2021-10-22T18:00:50.000Z",
            "author": {
                "name": "wbamberg",
                "url": "https://github.com/wbamberg"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/4939",
            "content_html": "<p dir=\"auto\">MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event</a></p>\n<h4 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h4>\n<p dir=\"auto\">It would be worth noting that this event is not fired when the user calls .stop() on the track.</p>\n<p dir=\"auto\">Also this page should include this information somehow in my Opinion:<br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack#events\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack#events</a><br>\nended<br>\nSent when playback of the track ends <strong>(when the value readyState changes to ended)</strong>.<br>\nAlso available using the onended event handler property.</p>\n<p dir=\"auto\">In the case of calling .stop() yourself, readyState DOES change to ended but the event is not fired.</p>\n<h4 dir=\"auto\">Specific section or headline?</h4>\n<h4 dir=\"auto\">What did you expect to see?</h4>\n<h4 dir=\"auto\">Did you test this? If so, how?</h4>\n\n<details>\n<summary>MDN Content page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/api/mediastreamtrack/ended_event</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/api/mediastreamtrack/ended_event/index.html\">https://github.com/mdn/content/blob/main/files/en-us/web/api/mediastreamtrack/ended_event/index.html</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/c016a6b893578b1f39794983682c6d9107910226/hovercard\" href=\"https://github.com/mdn/content/commit/c016a6b893578b1f39794983682c6d9107910226\"><tt>c016a6b</tt></a></li>\n<li>Document last modified: 2020-12-21T07:50:05.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/4939",
            "title": "[mediacapture-streams] Issue with \"MediaStreamTrack: ended event\": note that this event is not fired when the user calls .stop() on the track",
            "date_modified": "2021-05-12T10:02:23.000Z",
            "author": {
                "name": "receter",
                "url": "https://github.com/receter"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/1456",
            "content_html": "<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/simajzenman/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/simajzenman\">@simajzenman</a> commented on <a href=\"https://github.com/mdn/sprints/issues/3878\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/sprints/issues/3878/hovercard\">Tue Nov 10 2020</a></p>\n<h1 dir=\"auto\">Request type</h1>\n\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Correction or update</li>\n</ul>\n<h1 dir=\"auto\">Details</h1>\n\n<p dir=\"auto\">Hello Mozilla,</p>\n<p dir=\"auto\">I've seen in the page about MediaTrackConstraints.displaySurface (<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/displaySurface\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/displaySurface</a>) that in the first paragraph, it says \"is used to specify the type or types of display surfaces which getDisplayMedia() will let the user select among for sharing purposes.\". As far as I know (and tested) there is no way to restrain the type of surface you want to allow in javascript on client side; displaySurface (as it is written in the same page) can be used to detect the type of surface for a current stream already going.</p>\n<p dir=\"auto\">If I am wrong, I first apologies for wasting your time and would be happy to have more info.<br>\nI also tried to edit it myself but couldn't for that paragraph</p>\n<p dir=\"auto\">In the meantime, if you know where I could find in the doc a way to identify the stream name(meaning if I share facebook tab browser, I should find \"facebook\" in the name of the current stream), it would really help me.</p>\n<p dir=\"auto\">Have a great one,<br>\nSimon</p>",
            "url": "https://github.com/mdn/content/issues/1456",
            "title": "[screen-capture] MediaTrackConstraints.displaySurface: there is no way to restrain surface type via javascript; can only detect surface type for a current stream already going",
            "date_modified": "2021-01-18T15:39:25.000Z",
            "author": {
                "name": "chrisdavidmills",
                "url": "https://github.com/chrisdavidmills"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/1406",
            "content_html": "<p dir=\"auto\">MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/replaceTrack\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/replaceTrack</a></p>\n<h4 dir=\"auto\">What information was incorrect, unhelpful, or incomplete?</h4>\n<p dir=\"auto\">I don't think the example code is correct - it introduces \"PCs\" but what is this?</p>\n<p dir=\"auto\">// example to change video camera, suppose selected value saved into window.selectedCamera...</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\nnavigator.mediaDevices\n  .getUserMedia({\n    video: {\n      deviceId: {\n        exact: window.selectedCamera\n      }\n    }\n  })\n  .then(function(stream) {\n    let videoTrack = stream.getVideoTracks()[0];\n    PCs.forEach(function(pc) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track.kind == videoTrack.kind;\n      });\n      console.log('found sender:', sender);\n      sender.replaceTrack(videoTrack);\n    });\n  })\n  .catch(function(err) {\n    console.error('Error happens:', err);\n  });\n\"><pre class=\"notranslate\"><code class=\"notranslate\">\nnavigator.mediaDevices\n  .getUserMedia({\n    video: {\n      deviceId: {\n        exact: window.selectedCamera\n      }\n    }\n  })\n  .then(function(stream) {\n    let videoTrack = stream.getVideoTracks()[0];\n    PCs.forEach(function(pc) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track.kind == videoTrack.kind;\n      });\n      console.log('found sender:', sender);\n      sender.replaceTrack(videoTrack);\n    });\n  })\n  .catch(function(err) {\n    console.error('Error happens:', err);\n  });\n\n</code></pre></div>\n\n<details>\n<summary>MDN Content page report details</summary>\n<ul dir=\"auto\">\n<li>Folder: <code class=\"notranslate\">en-us/web/api/rtcrtpsender/replacetrack</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/replaceTrack\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/replaceTrack</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/master/files/en-us/web/api/rtcrtpsender/replacetrack/index.html\">https://github.com/mdn/content/blob/master/files/en-us/web/api/rtcrtpsender/replacetrack/index.html</a></li>\n<li>Report started: 2021-01-17T17:33:03.954Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/1406",
            "title": "[webrtc] \"RTCRtpSender.replaceTrack()\": example uses undeclared variable \"PCs\"",
            "date_modified": "2021-01-17T17:37:46.000Z",
            "author": {
                "name": "Abe2021",
                "url": "https://github.com/Abe2021"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/2450",
            "content_html": "<h1 dir=\"auto\">Request type</h1>\n\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> New documentation</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Correction or update</li>\n</ul>\n<h1 dir=\"auto\">Details</h1>\n<p dir=\"auto\">See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icecandidate_event\" rel=\"nofollow\">icecandidate event</a>.</p>\n<p dir=\"auto\">The code sample in \"Sharing a new candidate\" checks if event.candidate is truthy before delivering it to the remote peer. \"Indicating the end of a generation of candidates\" says that events where <code class=\"notranslate\">event.candidate == \"\"</code> should be delivered, but <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Falsy\" rel=\"nofollow\">the empty string is falsy</a> in JavaScript and this signal would not be delivered. \"Indicating that ICE gathering is complete\" says that events where <code class=\"notranslate\">event.complete == null</code> should not be delivered but then refers to the <code class=\"notranslate\">event.candidate == true</code> test.</p>\n<p dir=\"auto\">There is clearly a nuance here that I'm missing, but in any case this may need to be clarified. An uninformed reader would form the conclusion that actually a <code class=\"notranslate\">event.complete != null</code> test is needed.</p>\n<p dir=\"auto\">There's also mixed references to RTCPeerConnectionIceEvent (bluelinked) and RTCPeerIceCandidateEvent (redlinked), not sure if that's intentional.</p>",
            "url": "https://github.com/mdn/content/issues/2450",
            "title": "[webrtc] icecandidate_event update the meaning of null candidate",
            "date_modified": "2019-11-24T10:21:05.000Z",
            "author": {
                "name": "bardiharborow",
                "url": "https://github.com/bardiharborow"
            }
        }
    ]
}