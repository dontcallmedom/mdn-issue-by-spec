{
    "version": "https://jsonfeed.org/version/1",
    "title": "W3C Web Real-Time Communications Working Group-relevant MDN issues",
    "home_page_url": "https://dontcallmedom.github.io/mdn-issue-by-spec/w3c_web_real_time_communications_working_group.rss",
    "description": "Issue filed on MDN Web Docs related to pages attached to technologies developed by W3C Web Real-Time Communications Working Group",
    "author": {
        "name": "mdn-issue-by-spec",
        "url": "https://github.com/dontcallmedom/mdn-issue-by-spec"
    },
    "items": [
        {
            "id": "https://github.com/mdn/content/issues/9099",
            "content_html": "<p>MDN URL: <a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/onerror\">https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/onerror</a></p>\n<h4>What information was incorrect, unhelpful, or incomplete?</h4>\n<p>The code in the example has a syntax error</p>\n<h4>Specific section or headline?</h4>\n<p><strong>Example</strong></p>\n<h4>What did you expect to see?</h4>\n<p>I don't know the context of this example, so I can't give advice</p>\n<h4>Did you test this? If so, how?</h4>\n<p>Original code with syntax error:</p>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"let pc = new RTCPeerConnection();\nlet dc = pc.createDataChannel(&quot;PlayerControl&quot;);\n\ndc.onerror = function(event) {\n  myUILibrary.doAlertBox({\n    'Network Error',        // Alert title\n    'The error &quot;' + event.message +\n           '&quot; occurred while handling player control network messages.',\n    event.filename,\n    event.lineno,\n    event.colno\n  });\n}\n\n/* ... */\n\"><pre><code>let pc = new RTCPeerConnection();\nlet dc = pc.createDataChannel(\"PlayerControl\");\n\ndc.onerror = function(event) {\n  myUILibrary.doAlertBox({\n    'Network Error',        // Alert title\n    'The error \"' + event.message +\n           '\" occurred while handling player control network messages.',\n    event.filename,\n    event.lineno,\n    event.colno\n  });\n}\n\n/* ... */\n</code></pre></div>\n\n<details>\n<summary>MDN Content page report details</summary>\n<ul>\n<li>Folder: <code>en-us/web/api/rtcdatachannel/onerror</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/onerror\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/onerror</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcdatachannel/onerror/index.md\">https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcdatachannel/onerror/index.md</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/2279e5ae6c229c707a014a22aa1ec4635a0f981f/hovercard\" href=\"https://github.com/mdn/content/commit/2279e5ae6c229c707a014a22aa1ec4635a0f981f\"><tt>2279e5a</tt></a></li>\n<li>Document last modified: 2021-09-14T18:08:09.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/9099",
            "title": "[webrtc] Issue with \"RTCDataChannel.onerror\": (Invalid code)",
            "date_modified": "2021-09-20T10:18:13.000Z",
            "author": {
                "name": "oxy-plus",
                "url": "https://github.com/oxy-plus"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/7125",
            "content_html": "<p>MDN URL: <a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\">https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices</a></p>\n<h4>What information was incorrect, unhelpful, or incomplete?</h4>\n<p>The example used in this page throws an exception avoiding the written exceptions expected when an error occurs.</p>\n<h4>Specific section or headline?</h4>\n<p>I get the following on the console: Uncaught (in promise) TypeError: Cannot read property 'innerHTML' of null<br>\nat errorMsg</p>\n<h4>What did you expect to see?</h4>\n<p>The set of error defined from the catch:</p>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"if (error.name === &quot;ConstraintNotSatisfiedError&quot;) {\n          errorMsg(\n            &quot;The resolution &quot; +\n              constraints.video.width.exact +\n              &quot;x&quot; +\n              constraints.video.height.exact +\n              &quot; px is not supported by your device.&quot;\n          );\n        } else if (error.name === &quot;PermissionDeniedError&quot;) {\n          errorMsg(\n            &quot;Permissions have not been granted to use your camera and &quot; +\n              &quot;microphone, you need to allow the page access to your devices in &quot; +\n              &quot;order for the demo to work.&quot;\n          );\n        }\n        errorMsg(&quot;getUserMedia error: &quot; + error.name, error);\n      });\n\"><pre><code>if (error.name === \"ConstraintNotSatisfiedError\") {\n          errorMsg(\n            \"The resolution \" +\n              constraints.video.width.exact +\n              \"x\" +\n              constraints.video.height.exact +\n              \" px is not supported by your device.\"\n          );\n        } else if (error.name === \"PermissionDeniedError\") {\n          errorMsg(\n            \"Permissions have not been granted to use your camera and \" +\n              \"microphone, you need to allow the page access to your devices in \" +\n              \"order for the demo to work.\"\n          );\n        }\n        errorMsg(\"getUserMedia error: \" + error.name, error);\n      });\n</code></pre></div>\n<h4>Did you test this? If so, how?</h4>\n<p>I tried to run a different message with an else in the case the error the catch was looking was not found but the exception persists. I understand it has to do with the innerHTML not being defined. What I don't understand is why is it -null-...</p>\n\n<details>\n<summary>MDN Content page report details</summary>\n<ul>\n<li>Folder: <code>en-us/web/api/mediadevices</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/api/mediadevices/index.html\">https://github.com/mdn/content/blob/main/files/en-us/web/api/mediadevices/index.html</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/51a70c224f882429168119989ea19ac3aeb60a02/hovercard\" href=\"https://github.com/mdn/content/commit/51a70c224f882429168119989ea19ac3aeb60a02\"><tt>51a70c2</tt></a></li>\n<li>Document last modified: 2021-06-14T11:27:10.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/7125",
            "title": "[mediacapture-streams] Issue with \"MediaDevices\": (short summary here please)",
            "date_modified": "2021-07-21T12:22:21.000Z",
            "author": {
                "name": "nicolasguasca1",
                "url": "https://github.com/nicolasguasca1"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/6117",
            "content_html": "<h2>What page(s) did you find the problem on?</h2>\n\n<p>Lots of them!<br>\n<a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\">https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia</a><br>\n<a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise</a><br>\n...and many more!</p>\n<h2>Specific page section or heading?</h2>\n\n<p>getUserMedia: <em>Using the new API in older browsers</em><br>\nPromise: <em>Chained Promises</em></p>\n<h2>What is the problem?</h2>\n\n<p><code>console.log()</code> is frequently used for error handling on MDN pages, most commonly in a <code>try/catch</code> block, although <code>console.error()</code> should always be used for these cases.</p>\n<h2>What did you expect to see?</h2>\n\n<p>All errors to always be handled via <code>console.error()</code>.</p>\n<h2>Did you test this? If so, how?</h2>\n\n<p>No, I did not need to.</p>",
            "url": "https://github.com/mdn/content/issues/6117",
            "title": "[ecmascript, mediacapture-streams] Globally replace console.log() calls in all cases where console.error() should be used instead",
            "date_modified": "2021-06-18T17:07:45.000Z",
            "author": {
                "name": "JavascriptLearner815",
                "url": "https://github.com/JavascriptLearner815"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/4939",
            "content_html": "<p>MDN URL: <a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event\">https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event</a></p>\n<h4>What information was incorrect, unhelpful, or incomplete?</h4>\n<p>It would be worth noting that this event is not fired when the user calls .stop() on the track.</p>\n<p>Also this page should include this information somehow in my Opinion:<br>\n<a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack#events\">https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack#events</a><br>\nended<br>\nSent when playback of the track ends <strong>(when the value readyState changes to ended)</strong>.<br>\nAlso available using the onended event handler property.</p>\n<p>In the case of calling .stop() yourself, readyState DOES change to ended but the event is not fired.</p>\n<h4>Specific section or headline?</h4>\n<h4>What did you expect to see?</h4>\n<h4>Did you test this? If so, how?</h4>\n\n<details>\n<summary>MDN Content page report details</summary>\n<ul>\n<li>Folder: <code>en-us/web/api/mediastreamtrack/ended_event</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/main/files/en-us/web/api/mediastreamtrack/ended_event/index.html\">https://github.com/mdn/content/blob/main/files/en-us/web/api/mediastreamtrack/ended_event/index.html</a></li>\n<li>Last commit: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mdn/content/commit/c016a6b893578b1f39794983682c6d9107910226/hovercard\" href=\"https://github.com/mdn/content/commit/c016a6b893578b1f39794983682c6d9107910226\"><tt>c016a6b</tt></a></li>\n<li>Document last modified: 2020-12-21T07:50:05.000Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/4939",
            "title": "[mediacapture-streams] Issue with \"MediaStreamTrack: ended event\": (short summary here please)",
            "date_modified": "2021-05-12T10:02:23.000Z",
            "author": {
                "name": "receter",
                "url": "https://github.com/receter"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/1456",
            "content_html": "<p><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/simajzenman/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/simajzenman\">@simajzenman</a> commented on <a href=\"https://github.com/mdn/sprints/issues/3878\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mdn/sprints/issues/3878/hovercard\">Tue Nov 10 2020</a></p>\n<h1>Request type</h1>\n\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Correction or update</li>\n</ul>\n<h1>Details</h1>\n\n<p>Hello Mozilla,</p>\n<p>I've seen in the page about MediaTrackConstraints.displaySurface (<a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/displaySurface\">https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/displaySurface</a>) that in the first paragraph, it says \"is used to specify the type or types of display surfaces which getDisplayMedia() will let the user select among for sharing purposes.\". As far as I know (and tested) there is no way to restrain the type of surface you want to allow in javascript on client side; displaySurface (as it is written in the same page) can be used to detect the type of surface for a current stream already going.</p>\n<p>If I am wrong, I first apologies for wasting your time and would be happy to have more info.<br>\nI also tried to edit it myself but couldn't for that paragraph</p>\n<p>In the meantime, if you know where I could find in the doc a way to identify the stream name(meaning if I share facebook tab browser, I should find \"facebook\" in the name of the current stream), it would really help me.</p>\n<p>Have a great one,<br>\nSimon</p>",
            "url": "https://github.com/mdn/content/issues/1456",
            "title": "[screen-capture] displaySurface doc looks wrong",
            "date_modified": "2021-01-18T15:39:25.000Z",
            "author": {
                "name": "chrisdavidmills",
                "url": "https://github.com/chrisdavidmills"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/1406",
            "content_html": "<p>MDN URL: <a rel=\"nofollow\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/replaceTrack\">https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/replaceTrack</a></p>\n<h4>What information was incorrect, unhelpful, or incomplete?</h4>\n<p>I don't think the example code is correct - it introduces \"PCs\" but what is this?</p>\n<p>// example to change video camera, suppose selected value saved into window.selectedCamera...</p>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"\nnavigator.mediaDevices\n  .getUserMedia({\n    video: {\n      deviceId: {\n        exact: window.selectedCamera\n      }\n    }\n  })\n  .then(function(stream) {\n    let videoTrack = stream.getVideoTracks()[0];\n    PCs.forEach(function(pc) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track.kind == videoTrack.kind;\n      });\n      console.log('found sender:', sender);\n      sender.replaceTrack(videoTrack);\n    });\n  })\n  .catch(function(err) {\n    console.error('Error happens:', err);\n  });\n\n\"><pre><code>\nnavigator.mediaDevices\n  .getUserMedia({\n    video: {\n      deviceId: {\n        exact: window.selectedCamera\n      }\n    }\n  })\n  .then(function(stream) {\n    let videoTrack = stream.getVideoTracks()[0];\n    PCs.forEach(function(pc) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track.kind == videoTrack.kind;\n      });\n      console.log('found sender:', sender);\n      sender.replaceTrack(videoTrack);\n    });\n  })\n  .catch(function(err) {\n    console.error('Error happens:', err);\n  });\n\n</code></pre></div>\n\n<details>\n<summary>MDN Content page report details</summary>\n<ul>\n<li>Folder: <code>en-us/web/api/rtcrtpsender/replacetrack</code></li>\n<li>MDN URL: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/replaceTrack\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/replaceTrack</a></li>\n<li>GitHub URL: <a href=\"https://github.com/mdn/content/blob/master/files/en-us/web/api/rtcrtpsender/replacetrack/index.html\">https://github.com/mdn/content/blob/master/files/en-us/web/api/rtcrtpsender/replacetrack/index.html</a></li>\n<li>Report started: 2021-01-17T17:33:03.954Z</li>\n</ul>\n</details>",
            "url": "https://github.com/mdn/content/issues/1406",
            "title": "[webrtc] Issue with \"RTCRtpSender.replaceTrack()\": …",
            "date_modified": "2021-01-17T17:37:46.000Z",
            "author": {
                "name": "Abe2021",
                "url": "https://github.com/Abe2021"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/1830",
            "content_html": "<h1>Request type</h1>\n\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Correction or update</li>\n</ul>\n<h1>Details</h1>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia\" rel=\"nofollow\">MediaDevices.getDisplayMedia()</a> should accept <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#Properties_of_shared_screen_tracks\" rel=\"nofollow\">MediaTrackConstraints</a> according to documentation:</p>\n<blockquote>\n<p>Either a Boolean (which indicates whether or not a video track is requested) or a MediaTrackConstraints object providing the constraints which must be met by the video track included in the returned MediaStream. If constraints are specified, a video track is inherently requested.</p>\n</blockquote>\n<p>However it does not and for example if you use this, it does not affect it at all:<br>\n<code>getDisplayMedia({ video: { cursor: 'never', displaySurface: 'browser' } })</code></p>\n<h1>Expected result</h1>\n\n<p>It should take constraints into account if I provide them (or at least allow to user to select desired one, it is not possible to select browser tab in FF atm [Chrome has this possibility in selection pop up]).</p>",
            "url": "https://github.com/mdn/content/issues/1830",
            "title": "[screen-capture, mediacapture-streams] MediaDevices.getDisplayMedia() ignores constraints in FF",
            "date_modified": "2020-02-10T14:53:07.000Z",
            "author": {
                "name": "zemiacsik",
                "url": "https://github.com/zemiacsik"
            }
        },
        {
            "id": "https://github.com/mdn/content/issues/2450",
            "content_html": "<h1>Request type</h1>\n\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> New documentation</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Correction or update</li>\n</ul>\n<h1>Details</h1>\n<p>See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icecandidate_event\" rel=\"nofollow\">icecandidate event</a>.</p>\n<p>The code sample in \"Sharing a new candidate\" checks if event.candidate is truthy before delivering it to the remote peer. \"Indicating the end of a generation of candidates\" says that events where <code>event.candidate == \"\"</code> should be delivered, but <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Falsy\" rel=\"nofollow\">the empty string is falsy</a> in JavaScript and this signal would not be delivered. \"Indicating that ICE gathering is complete\" says that events where <code>event.complete == null</code> should not be delivered but then refers to the <code>event.candidate == true</code> test.</p>\n<p>There is clearly a nuance here that I'm missing, but in any case this may need to be clarified. An uninformed reader would form the conclusion that actually a <code>event.complete != null</code> test is needed.</p>\n<p>There's also mixed references to RTCPeerConnectionIceEvent (bluelinked) and RTCPeerIceCandidateEvent (redlinked), not sure if that's intentional.</p>",
            "url": "https://github.com/mdn/content/issues/2450",
            "title": "[webrtc] /en-US/docs/Web/API/RTCPeerConnection/icecandidate_event",
            "date_modified": "2019-11-24T10:21:05.000Z",
            "author": {
                "name": "bardiharborow",
                "url": "https://github.com/bardiharborow"
            }
        }
    ]
}