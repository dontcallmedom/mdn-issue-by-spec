<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>WHATWG Streams Workstream-relevant MDN issues</title>
        <link>https://dontcallmedom.github.io/mdn-issue-by-spec/whatwg_streams_workstream.rss</link>
        <description>Issue filed on MDN Web Docs related to pages attached to technologies developed by WHATWG Streams Workstream</description>
        <lastBuildDate>Sun, 01 Jan 2023 13:20:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[[streams] ReadableStream example mixes creation and consumption]]></title>
            <link>https://github.com/mdn/content/issues/23299</link>
            <guid>https://github.com/mdn/content/issues/23299</guid>
            <pubDate>Sun, 01 Jan 2023 13:20:04 GMT</pubDate>
            <content:encoded><![CDATA[<h3 dir="auto">MDN URL</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream</a></p>
<h3 dir="auto">What specific section or headline is this issue about?</h3>
<p dir="auto">The example</p>
<h3 dir="auto">What information was incorrect, unhelpful, or incomplete?</h3>
<p dir="auto">The example is this one:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="fetch('https://www.example.org')
  .then((response) =&gt; response.body)
  .then((rb) =&gt; {
    const reader = rb.getReader();

    return new ReadableStream({
      start(controller) {
        // The following function handles each data chunk
        function push() {
          // &quot;done&quot; is a Boolean and value a &quot;Uint8Array&quot;
          reader.read().then(({ done, value }) =&gt; {
            // If there is no more data to read
            if (done) {
              console.log('done', done);
              controller.close();
              return;
            }
            // Get the data and send it to the browser via the controller
            controller.enqueue(value);
            // Check chunks by logging to the console
            console.log(done, value);
            push();
          });
        }

        push();
      },
    });
  })
  .then((stream) =&gt;
    // Respond with our stream
    new Response(stream, { headers: { 'Content-Type': 'text/html' } }).text()
  )
  .then((result) =&gt; {
    // Do things with result
    console.log(result);
  });
"><pre lang="js" class="notranslate"><code class="notranslate">fetch('https://www.example.org')
  .then((response) =&gt; response.body)
  .then((rb) =&gt; {
    const reader = rb.getReader();

    return new ReadableStream({
      start(controller) {
        // The following function handles each data chunk
        function push() {
          // "done" is a Boolean and value a "Uint8Array"
          reader.read().then(({ done, value }) =&gt; {
            // If there is no more data to read
            if (done) {
              console.log('done', done);
              controller.close();
              return;
            }
            // Get the data and send it to the browser via the controller
            controller.enqueue(value);
            // Check chunks by logging to the console
            console.log(done, value);
            push();
          });
        }

        push();
      },
    });
  })
  .then((stream) =&gt;
    // Respond with our stream
    new Response(stream, { headers: { 'Content-Type': 'text/html' } }).text()
  )
  .then((result) =&gt; {
    // Do things with result
    console.log(result);
  });

</code></pre></div>
<p dir="auto">I found it confusing because it is mixing both the <strong>how to consume</strong> and <strong>how to produce</strong> a Stream if I am correct.</p>
<h3 dir="auto">What did you expect to see?</h3>
<p dir="auto">As a person that is learning I don't really get from here a recipe for using it. Wouldn't it be better to split this into two pieces, one where it is shown how to read, and other where - maybe a server - creates a Stream for a Response ?</p>
<h3 dir="auto">Do you have any supporting links, references, or citations?</h3>
<p dir="auto"><em>No response</em></p>
<h3 dir="auto">Do you have anything more you want to share?</h3>
<p dir="auto">I may just be misunderstanding the example.</p>
<p dir="auto">Thanks for the patience !</p>
<h3 dir="auto">MDN metadata</h3>

<details>
<summary>Page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/api/readablestream</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/web/api/readablestream/index.md">https://github.com/mdn/content/blob/main/files/en-us/web/api/readablestream/index.md</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/06105598d11001e9f12d80ad05087f1df3c0634b/hovercard" href="https://github.com/mdn/content/commit/06105598d11001e9f12d80ad05087f1df3c0634b"><tt>0610559</tt></a></li>
<li>Document last modified: 2022-10-10T09:00:13.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
    </channel>
</rss>