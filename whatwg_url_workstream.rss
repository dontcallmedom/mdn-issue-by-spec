<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>WHATWG URL Workstream-relevant MDN issues</title>
        <link>https://dontcallmedom.github.io/mdn-issue-by-spec/whatwg_url_workstream.rss</link>
        <description>Issue filed on MDN Web Docs related to pages attached to technologies developed by WHATWG URL Workstream</description>
        <lastBuildDate>Fri, 16 Jul 2021 11:35:35 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[[url] Content bug: Possible parameters for URLSearchParams()]]></title>
            <link>https://github.com/mdn/content/issues/6970</link>
            <guid>https://github.com/mdn/content/issues/6970</guid>
            <pubDate>Fri, 16 Jul 2021 11:35:35 GMT</pubDate>
            <content:encoded><![CDATA[<h2>What page(s) did you find the problem on?</h2>
<p><a rel="nofollow" href="https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/URLSearchParams">https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/URLSearchParams</a></p>
<h2>Specific page section or heading?</h2>
<p>Parameters</p>
<h2>What is the problem?</h2>
<p>new URLSearchParams() also takes a FormData object as a parameter, which is not documented.</p>
<h2>What did you expect to see?</h2>
<p>Documentation what the init parameter can take.<br>
Maybe I misunderstand something and the FormData type is a sequence of USVString pairs?<br>
But still this example code (down here) could be included.</p>
<h2>Did you test this? If so, how?</h2>
<p>You can use it that way to build a query string out of the FormData object.<br>
This works:</p>
<div class="snippet-clipboard-content position-relative" data-snippet-clipboard-copy-content="const form = document.querySelect(&quot;form&quot;);
const formData = new FormData(form);
const urlParams = new URLSearchParams(formData);
const queryString = urlParams.toString();

"><pre><code>const form = document.querySelect("form");
const formData = new FormData(form);
const urlParams = new URLSearchParams(formData);
const queryString = urlParams.toString();

</code></pre></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[url] Issue with "URLSearchParams": should mention duplicate parameters and if conversion is lossless]]></title>
            <link>https://github.com/mdn/content/issues/2104</link>
            <guid>https://github.com/mdn/content/issues/2104</guid>
            <pubDate>Fri, 05 Feb 2021 10:43:19 GMT</pubDate>
            <content:encoded><![CDATA[<p>MDN URL: <a rel="nofollow" href="https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams">https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams</a></p>
<p>Questions which I came to the documentation for:</p>
<ol>
<li>How does URLSearchParams handle the same parameter appearing more than once, for example</li>
</ol>
<div class="highlight highlight-source-js position-relative" data-snippet-clipboard-copy-content="for (const i of new URLSearchParams(&quot;?first=1&amp;second=2&amp;first=3&quot;)); { console.log(i) } // [&quot;first&quot;, &quot;1&quot;] [&quot;second&quot;, &quot;2&quot;] [&quot;first&quot;, &quot;3&quot;]
new URLSearchParams(&quot;?first=1&amp;second=2&amp;first=3&quot;).get('first'); // &quot;1&quot;
"><pre><span class="pl-k">for</span> <span class="pl-kos">(</span><span class="pl-k">const</span> <span class="pl-s1">i</span> <span class="pl-k">of</span> <span class="pl-k">new</span> <span class="pl-v">URLSearchParams</span><span class="pl-kos">(</span><span class="pl-s">"?first=1&amp;second=2&amp;first=3"</span><span class="pl-kos">)</span><span class="pl-kos">)</span><span class="pl-kos">;</span> <span class="pl-kos">{</span> <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">i</span><span class="pl-kos">)</span> <span class="pl-kos">}</span> <span class="pl-c">// ["first", "1"] ["second", "2"] ["first", "3"]</span>
<span class="pl-k">new</span> <span class="pl-v">URLSearchParams</span><span class="pl-kos">(</span><span class="pl-s">"?first=1&amp;second=2&amp;first=3"</span><span class="pl-kos">)</span><span class="pl-kos">.</span><span class="pl-en">get</span><span class="pl-kos">(</span><span class="pl-s">'first'</span><span class="pl-kos">)</span><span class="pl-kos">;</span> <span class="pl-c">// "1"</span></pre></div>
<p>Edit: nevermind, this second line is documented in <code>.get()</code> "Returns the first value", I was unsure about the first because I've seen a <a href="https://www.npmjs.com/package/query-string" rel="nofollow">different javascript library</a> return a list as the second item in each entry. I still think it would be good to mention this in the examples too.</p>
<ol start="2">
<li>Does iterating over URLSearchParams preserve the order of the params or is it implemented with an unordered JavaScript dictionary?</li>
</ol>
<p>it's implemented with a list of lists so order is preserved.</p>
<ol start="3">
<li>Are round trip conversions lossless? How does it differentiate between params with and without an <code>=</code>?</li>
</ol>
<p>No it's not lossless because <code>?param</code> and <code>?param=</code> both parse as having a value of <code>""</code> instead of <code>null</code> for the former and <code>""</code> for the latter, so they are both converted to <code>?param=</code></p>
<div class="highlight highlight-source-js position-relative" data-snippet-clipboard-copy-content="for (const i of new URLSearchParams(&quot;?first=&amp;second&quot;)) { console.log(i) } // [&quot;first&quot;, &quot;&quot;] [&quot;second&quot;, &quot;&quot;]
String(new URLSearchParams(&quot;?first=&amp;second&quot;)); // &quot;first=&amp;second=&quot;
"><pre><span class="pl-k">for</span> <span class="pl-kos">(</span><span class="pl-k">const</span> <span class="pl-s1">i</span> <span class="pl-k">of</span> <span class="pl-k">new</span> <span class="pl-v">URLSearchParams</span><span class="pl-kos">(</span><span class="pl-s">"?first=&amp;second"</span><span class="pl-kos">)</span><span class="pl-kos">)</span> <span class="pl-kos">{</span> <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">i</span><span class="pl-kos">)</span> <span class="pl-kos">}</span> <span class="pl-c">// ["first", ""] ["second", ""]</span>
<span class="pl-v">String</span><span class="pl-kos">(</span><span class="pl-k">new</span> <span class="pl-v">URLSearchParams</span><span class="pl-kos">(</span><span class="pl-s">"?first=&amp;second"</span><span class="pl-kos">)</span><span class="pl-kos">)</span><span class="pl-kos">;</span> <span class="pl-c">// "first=&amp;second="</span></pre></div>

<details>
<summary>MDN Content page report details</summary>
<ul>
<li>Folder: <code>en-us/web/api/urlsearchparams</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/master/files/en-us/web/api/urlsearchparams/index.html">https://github.com/mdn/content/blob/master/files/en-us/web/api/urlsearchparams/index.html</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/dad0283e67a05c6e904a7cf30f4529257b28fe98/hovercard" href="https://github.com/mdn/content/commit/dad0283e67a05c6e904a7cf30f4529257b28fe98"><tt>dad0283</tt></a></li>
<li>Document last modified: 2020-12-21T19:02:54.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
    </channel>
</rss>