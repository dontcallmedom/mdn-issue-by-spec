<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>W3C Web Real-Time Communications Working Group-relevant MDN issues</title>
        <link>https://dontcallmedom.github.io/mdn-issue-by-spec/w3c_web_real_time_communications_working_group.rss</link>
        <description>Issue filed on MDN Web Docs related to pages attached to technologies developed by W3C Web Real-Time Communications Working Group</description>
        <lastBuildDate>Tue, 30 Aug 2022 19:08:41 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[[webrtc] Possibly missing information in WebRTC config section about certificates]]></title>
            <link>https://github.com/mdn/content/issues/20134</link>
            <guid>https://github.com/mdn/content/issues/20134</guid>
            <pubDate>Tue, 30 Aug 2022 19:08:41 GMT</pubDate>
            <content:encoded><![CDATA[<h3 dir="auto">MDN URL</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection</a></p>
<h3 dir="auto">What specific section or headline is this issue about?</h3>
<p dir="auto">Using certificates</p>
<h3 dir="auto">What information was incorrect, unhelpful, or incomplete?</h3>
<p dir="auto">Section contains visible todo comment "&lt;&lt;&lt;--- add link to information about identity ---&gt;&gt;&gt;"</p>
<h3 dir="auto">What did you expect to see?</h3>
<p dir="auto">The comment should either be hidden or said link should be provided</p>
<h3 dir="auto">Do you have any supporting links, references, or citations?</h3>
<p dir="auto"><em>No response</em></p>
<h3 dir="auto">Do you have anything more you want to share?</h3>
<p dir="auto"><em>No response</em></p>
<h3 dir="auto">MDN metadata</h3>

<details>
<summary>Page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/api/rtcpeerconnection/rtcpeerconnection</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcpeerconnection/rtcpeerconnection/index.md">https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcpeerconnection/rtcpeerconnection/index.md</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/59d036cd686d9715c1cb9f3157a2a8545ea13882/hovercard" href="https://github.com/mdn/content/commit/59d036cd686d9715c1cb9f3157a2a8545ea13882"><tt>59d036c</tt></a></li>
<li>Document last modified: 2022-06-11T04:12:24.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[mediastream-recording] Emitted blobs do not always exactly adhere to the timeslice value]]></title>
            <link>https://github.com/mdn/content/issues/19369</link>
            <guid>https://github.com/mdn/content/issues/19369</guid>
            <pubDate>Wed, 10 Aug 2022 14:39:46 GMT</pubDate>
            <content:encoded><![CDATA[<h3 dir="auto">MDN URL</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/dataavailable_event" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/dataavailable_event</a></p>
<h3 dir="auto">What specific section or headline is this issue about?</h3>
<p dir="auto">First section, fourth bullet point about the timeslice parameter</p>
<h3 dir="auto">What information was incorrect, unhelpful, or incomplete?</h3>
<p dir="auto">The documentation currently says this:</p>
<blockquote>
<p dir="auto">If a timeslice property was passed into the <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/start" rel="nofollow">MediaRecorder.start()</a> method that started media capture, a dataavailable event is fired every timeslice milliseconds.</p>
</blockquote>
<p dir="auto">However, I used to record videos with a MediaRecorder like this (in vuejs):</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="startRecording: function () {
    this.recorder = new MediaRecorder(this.streamSrc, {mimeType: &quot;video/webm;codecs:vp8&quot;});
    this.recorder.ondataavailable = this.onData;
    this.recorder.start(500);
},
onData: function (event) {
    // append the latest chunk of video data to an array
    this.chunks.push(event.data);
    this.duration = this.chunks.length * 500 / 1000;
}"><pre>startRecording: <span class="pl-k">function</span> <span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
    <span class="pl-smi">this</span><span class="pl-kos">.</span><span class="pl-c1">recorder</span> <span class="pl-c1">=</span> <span class="pl-k">new</span> <span class="pl-v">MediaRecorder</span><span class="pl-kos">(</span><span class="pl-smi">this</span><span class="pl-kos">.</span><span class="pl-c1">streamSrc</span><span class="pl-kos">,</span> <span class="pl-kos">{</span><span class="pl-c1">mimeType</span>: <span class="pl-s">"video/webm;codecs:vp8"</span><span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
    <span class="pl-smi">this</span><span class="pl-kos">.</span><span class="pl-c1">recorder</span><span class="pl-kos">.</span><span class="pl-c1">ondataavailable</span> <span class="pl-c1">=</span> <span class="pl-smi">this</span><span class="pl-kos">.</span><span class="pl-c1">onData</span><span class="pl-kos">;</span>
    <span class="pl-smi">this</span><span class="pl-kos">.</span><span class="pl-c1">recorder</span><span class="pl-kos">.</span><span class="pl-en">start</span><span class="pl-kos">(</span><span class="pl-c1">500</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span><span class="pl-kos">,</span>
<span class="pl-s1">onData</span>: <span class="pl-k">function</span> <span class="pl-kos">(</span><span class="pl-s1">event</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
    <span class="pl-c">// append the latest chunk of video data to an array</span>
    <span class="pl-smi">this</span><span class="pl-kos">.</span><span class="pl-c1">chunks</span><span class="pl-kos">.</span><span class="pl-en">push</span><span class="pl-kos">(</span><span class="pl-s1">event</span><span class="pl-kos">.</span><span class="pl-c1">data</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
    <span class="pl-smi">this</span><span class="pl-kos">.</span><span class="pl-c1">duration</span> <span class="pl-c1">=</span> <span class="pl-smi">this</span><span class="pl-kos">.</span><span class="pl-c1">chunks</span><span class="pl-kos">.</span><span class="pl-c1">length</span> <span class="pl-c1">*</span> <span class="pl-c1">500</span> <span class="pl-c1">/</span> <span class="pl-c1">1000</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span></pre></div>
<p dir="auto">and expected each blob emitted to the <code class="notranslate">onData</code> handler to contain exactly 500 ms of video. Hence, I simply used the length of the array to show the total recorded video duration to the user.</p>
<p dir="auto">As it turns out, the computed duration would accumulate a substantial drift from the real duration as the video got longer. After around 10 minutes of video, the displayed <code class="notranslate">duration</code> value would differ from the actual video duration by multiple seconds.<br>
I ended up implementing my own "stopwatch" to keep track of the recorded duration, which works much more accurately.</p>
<p dir="auto">From my understanding of how video codecs work, I imagine it's hard to make a sensible "cut" precisely after a given <code class="notranslate">timeslice</code> value and that's perhaps why we cannot rely on emitted blobs to have exactly the specified duration.</p>
<h3 dir="auto">What did you expect to see?</h3>
<p dir="auto">If my usage of the <code class="notranslate">timeslice</code> option and the assumption about video codecs is correct, I would suggest to adapt the documentation in a way to reflect this.</p>
<p dir="auto">From reading the current description, I thought the blob duration was reliable and had to spend effort debugging it when it wasn't.</p>
<h3 dir="auto">Do you have any supporting links, references, or citations?</h3>
<p dir="auto"><em>No response</em></p>
<h3 dir="auto">Do you have anything more you want to share?</h3>
<p dir="auto">I observed the described behaviour in Firefox and Chrome and suspect other browsers to behave the same way.</p>
<h3 dir="auto">MDN metadata</h3>

<details>
<summary>Page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/api/mediarecorder/dataavailable_event</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/dataavailable_event" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/dataavailable_event</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/web/api/mediarecorder/dataavailable_event/index.md">https://github.com/mdn/content/blob/main/files/en-us/web/api/mediarecorder/dataavailable_event/index.md</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/542ec1e002ae3c340f0925adfd1f0d870c14ff32/hovercard" href="https://github.com/mdn/content/commit/542ec1e002ae3c340f0925adfd1f0d870c14ff32"><tt>542ec1e</tt></a></li>
<li>Document last modified: 2022-08-09T12:24:48.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[webrtc] Definition of srflx (server reflexive) address is not correct.]]></title>
            <link>https://github.com/mdn/content/issues/16155</link>
            <guid>https://github.com/mdn/content/issues/16155</guid>
            <pubDate>Tue, 17 May 2022 18:12:25 GMT</pubDate>
            <content:encoded><![CDATA[<h3 dir="auto">MDN URL</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/type" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/type</a></p>
<h3 dir="auto">What specific section or headline is this issue about?</h3>
<p dir="auto">Value:srflx</p>
<h3 dir="auto">What information was incorrect, unhelpful, or incomplete?</h3>
<p dir="auto">The intermediary address is not assigned by the STUN server. The STUN server does not assign any addresses; it reports back the sender's address as a service. The ip field indicates the address seen by a STUN server as the source address when it received a STUN BINDING request packet. This is the address of the host as seen by a STUN server.</p>
<h3 dir="auto">What did you expect to see?</h3>
<p dir="auto">Something that paraphrases: "Server Reflexive Candidate:  A candidate whose IP address and port<br>
are a binding allocated by a NAT for an agent when it sent a<br>
packet through the NAT to a server.  Server reflexive candidates<br>
can be learned by STUN servers using the Binding request, or TURN<br>
servers, which provides both a relayed and server reflexive<br>
candidate."</p>
<h3 dir="auto">Do you have any supporting links, references, or citations?</h3>
<p dir="auto"><a href="https://www.rfc-editor.org/rfc/rfc5245#page-20" rel="nofollow">https://www.rfc-editor.org/rfc/rfc5245#page-20</a></p>
<p dir="auto">Server Reflexive Candidate:  A candidate whose IP address and port<br>
are a binding allocated by a NAT for an agent when it sent a<br>
packet through the NAT to a server.  Server reflexive candidates<br>
can be learned by STUN servers using the Binding request, or TURN<br>
servers, which provides both a relayed and server reflexive<br>
candidate.</p>
<h3 dir="auto">Do you have anything more you want to share?</h3>
<p dir="auto"><em>No response</em></p>
<h3 dir="auto">MDN metadata</h3>

<details>
<summary>Page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/api/rtcicecandidate/type</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/type" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/type</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcicecandidate/type/index.md">https://github.com/mdn/content/blob/main/files/en-us/web/api/rtcicecandidate/type/index.md</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/1137a94618867e82b78d192bd79c4dd30b034cdc/hovercard" href="https://github.com/mdn/content/commit/1137a94618867e82b78d192bd79c4dd30b034cdc"><tt>1137a94</tt></a></li>
<li>Document last modified: 2022-05-14T04:19:35.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[mediacapture-streams] MediaStream API missing removeTrack documentation]]></title>
            <link>https://github.com/mdn/content/issues/15282</link>
            <guid>https://github.com/mdn/content/issues/15282</guid>
            <pubDate>Sat, 23 Apr 2022 15:03:58 GMT</pubDate>
            <content:encoded><![CDATA[<h3 dir="auto">MDN URL</h3>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStream" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/MediaStream</a></p>
<h3 dir="auto">What specific section or headline is this issue about?</h3>
<p dir="auto"><em>No response</em></p>
<h3 dir="auto">What information was incorrect, unhelpful, or incomplete?</h3>
<p dir="auto">The MediaStream API documentation is missing the <code class="notranslate">removeTrack</code> method. It includes the <code class="notranslate">removeTrack</code> event, but is missing the method. This is a very important method that users would benefit from knowing exists.</p>
<h3 dir="auto">What did you expect to see?</h3>
<p dir="auto">I would expect to see <code class="notranslate">removeTrack</code> in the MediaStream "Methods" list along with the documentation and examples of using this method, as well as its Browser Compatibility.</p>
<h3 dir="auto">Do you have any supporting links, references, or citations?</h3>
<p dir="auto">W3C Specification <a href="https://w3c.github.io/mediacapture-main/#dom-mediastream-removetrack" rel="nofollow">https://w3c.github.io/mediacapture-main/#dom-mediastream-removetrack</a></p>
<h3 dir="auto">Do you have anything more you want to share?</h3>
<p dir="auto"><em>No response</em></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[mediacapture-streams] MediaDeviceInfo»toJSON() needs to be documented]]></title>
            <link>https://github.com/mdn/content/issues/13463</link>
            <guid>https://github.com/mdn/content/issues/13463</guid>
            <pubDate>Thu, 03 Mar 2022 18:40:42 GMT</pubDate>
            <content:encoded><![CDATA[<h2 dir="auto">What page(s) did you find the problem on?</h2>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/toJSON" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/toJSON</a></p>
<h2 dir="auto">Specific page section or heading?</h2>
<p dir="auto"><a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo</a></p>
<h2 dir="auto">What is the problem?</h2>
<p dir="auto">On above MediaDeviceInfo page, I was looking what toJSON() did. I searched and found <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/toJSON" rel="nofollow">toJSON()</a> -- it links to page but gives page not found error</p>
<h2 dir="auto">What did you expect to see?</h2>
<p dir="auto">A page saying what toJSON() would do or saying it was deprecated which may be the case.</p>
<h2 dir="auto">Did you test this? If so, how?</h2>
<p dir="auto">Clicking thru above links to this page <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/toJSON" rel="nofollow">toJSON()</a></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[webrtc] https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Using_DTMF is using legacy APIs]]></title>
            <link>https://github.com/mdn/content/issues/10020</link>
            <guid>https://github.com/mdn/content/issues/10020</guid>
            <pubDate>Fri, 22 Oct 2021 18:00:50 GMT</pubDate>
            <content:encoded><![CDATA[<p dir="auto">Originally from <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1023721513" data-permission-text="Title is private" data-url="https://github.com/mdn/content/issues/9748" data-hovercard-type="pull_request" data-hovercard-url="/mdn/content/pull/9748/hovercard?comment_id=733866073&amp;comment_type=review_comment" href="https://github.com/mdn/content/pull/9748#discussion_r733866073">#9748 (comment)</a>.</p>
<p dir="auto">The <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Using_DTMF" rel="nofollow">Using DTMF</a> page in the WebRTC docs is using the <code class="notranslate">offerToReceiveAudio</code> and <code class="notranslate">offerToReceiveVideo</code> options, which in the <a href="https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer" rel="nofollow"><code class="notranslate">RTCPeerConnection.createOffer()</code></a> docs are described as "legacy":</p>
<blockquote>
<p dir="auto">You shouldn't use this legacy property. Instead, use RTCRtpTransceiver to control whether or not to accept incoming audio.</p>
</blockquote>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[mediacapture-streams] Issue with "MediaStreamTrack: ended event": note that this event is not fired when the user calls .stop() on the track]]></title>
            <link>https://github.com/mdn/content/issues/4939</link>
            <guid>https://github.com/mdn/content/issues/4939</guid>
            <pubDate>Wed, 12 May 2021 10:02:23 GMT</pubDate>
            <content:encoded><![CDATA[<p dir="auto">MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event</a></p>
<h4 dir="auto">What information was incorrect, unhelpful, or incomplete?</h4>
<p dir="auto">It would be worth noting that this event is not fired when the user calls .stop() on the track.</p>
<p dir="auto">Also this page should include this information somehow in my Opinion:<br>
<a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack#events" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack#events</a><br>
ended<br>
Sent when playback of the track ends <strong>(when the value readyState changes to ended)</strong>.<br>
Also available using the onended event handler property.</p>
<p dir="auto">In the case of calling .stop() yourself, readyState DOES change to ended but the event is not fired.</p>
<h4 dir="auto">Specific section or headline?</h4>
<h4 dir="auto">What did you expect to see?</h4>
<h4 dir="auto">Did you test this? If so, how?</h4>

<details>
<summary>MDN Content page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/api/mediastreamtrack/ended_event</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/main/files/en-us/web/api/mediastreamtrack/ended_event/index.html">https://github.com/mdn/content/blob/main/files/en-us/web/api/mediastreamtrack/ended_event/index.html</a></li>
<li>Last commit: <a class="commit-link" data-hovercard-type="commit" data-hovercard-url="https://github.com/mdn/content/commit/c016a6b893578b1f39794983682c6d9107910226/hovercard" href="https://github.com/mdn/content/commit/c016a6b893578b1f39794983682c6d9107910226"><tt>c016a6b</tt></a></li>
<li>Document last modified: 2020-12-21T07:50:05.000Z</li>
</ul>
</details>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[screen-capture] displaySurface doc looks wrong: there is no way to restrain the type of surface you want to allow in javascript on client side; displaySurface can be used to detect the type of surface for a current stream already going]]></title>
            <link>https://github.com/mdn/content/issues/1456</link>
            <guid>https://github.com/mdn/content/issues/1456</guid>
            <pubDate>Mon, 18 Jan 2021 15:39:25 GMT</pubDate>
            <content:encoded><![CDATA[<p dir="auto"><a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/simajzenman/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/simajzenman">@simajzenman</a> commented on <a href="https://github.com/mdn/sprints/issues/3878" data-hovercard-type="issue" data-hovercard-url="/mdn/sprints/issues/3878/hovercard">Tue Nov 10 2020</a></p>
<h1 dir="auto">Request type</h1>

<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> Correction or update</li>
</ul>
<h1 dir="auto">Details</h1>

<p dir="auto">Hello Mozilla,</p>
<p dir="auto">I've seen in the page about MediaTrackConstraints.displaySurface (<a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/displaySurface" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/displaySurface</a>) that in the first paragraph, it says "is used to specify the type or types of display surfaces which getDisplayMedia() will let the user select among for sharing purposes.". As far as I know (and tested) there is no way to restrain the type of surface you want to allow in javascript on client side; displaySurface (as it is written in the same page) can be used to detect the type of surface for a current stream already going.</p>
<p dir="auto">If I am wrong, I first apologies for wasting your time and would be happy to have more info.<br>
I also tried to edit it myself but couldn't for that paragraph</p>
<p dir="auto">In the meantime, if you know where I could find in the doc a way to identify the stream name(meaning if I share facebook tab browser, I should find "facebook" in the name of the current stream), it would really help me.</p>
<p dir="auto">Have a great one,<br>
Simon</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[webrtc] "RTCRtpSender.replaceTrack()": I don't think the example code is correct - it introduces "PCs" but what is this?]]></title>
            <link>https://github.com/mdn/content/issues/1406</link>
            <guid>https://github.com/mdn/content/issues/1406</guid>
            <pubDate>Sun, 17 Jan 2021 17:37:46 GMT</pubDate>
            <content:encoded><![CDATA[<p dir="auto">MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/replaceTrack" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/replaceTrack</a></p>
<h4 dir="auto">What information was incorrect, unhelpful, or incomplete?</h4>
<p dir="auto">I don't think the example code is correct - it introduces "PCs" but what is this?</p>
<p dir="auto">// example to change video camera, suppose selected value saved into window.selectedCamera...</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="
navigator.mediaDevices
  .getUserMedia({
    video: {
      deviceId: {
        exact: window.selectedCamera
      }
    }
  })
  .then(function(stream) {
    let videoTrack = stream.getVideoTracks()[0];
    PCs.forEach(function(pc) {
      var sender = pc.getSenders().find(function(s) {
        return s.track.kind == videoTrack.kind;
      });
      console.log('found sender:', sender);
      sender.replaceTrack(videoTrack);
    });
  })
  .catch(function(err) {
    console.error('Error happens:', err);
  });
"><pre class="notranslate notranslate"><code>
navigator.mediaDevices
  .getUserMedia({
    video: {
      deviceId: {
        exact: window.selectedCamera
      }
    }
  })
  .then(function(stream) {
    let videoTrack = stream.getVideoTracks()[0];
    PCs.forEach(function(pc) {
      var sender = pc.getSenders().find(function(s) {
        return s.track.kind == videoTrack.kind;
      });
      console.log('found sender:', sender);
      sender.replaceTrack(videoTrack);
    });
  })
  .catch(function(err) {
    console.error('Error happens:', err);
  });

</code></pre></div>

<details>
<summary>MDN Content page report details</summary>
<ul dir="auto">
<li>Folder: <code class="notranslate">en-us/web/api/rtcrtpsender/replacetrack</code></li>
<li>MDN URL: <a href="https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/replaceTrack" rel="nofollow">https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/replaceTrack</a></li>
<li>GitHub URL: <a href="https://github.com/mdn/content/blob/master/files/en-us/web/api/rtcrtpsender/replacetrack/index.html">https://github.com/mdn/content/blob/master/files/en-us/web/api/rtcrtpsender/replacetrack/index.html</a></li>
<li>Report started: 2021-01-17T17:33:03.954Z</li>
</ul>
</details>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[[webrtc] icecandidate_event update the meaning of null candidate]]></title>
            <link>https://github.com/mdn/content/issues/2450</link>
            <guid>https://github.com/mdn/content/issues/2450</guid>
            <pubDate>Sun, 24 Nov 2019 10:21:05 GMT</pubDate>
            <content:encoded><![CDATA[<h1 dir="auto">Request type</h1>

<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox"> New documentation</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Correction or update</li>
</ul>
<h1 dir="auto">Details</h1>
<p dir="auto">See <a href="https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icecandidate_event" rel="nofollow">icecandidate event</a>.</p>
<p dir="auto">The code sample in "Sharing a new candidate" checks if event.candidate is truthy before delivering it to the remote peer. "Indicating the end of a generation of candidates" says that events where <code class="notranslate">event.candidate == ""</code> should be delivered, but <a href="https://developer.mozilla.org/en-US/docs/Glossary/Falsy" rel="nofollow">the empty string is falsy</a> in JavaScript and this signal would not be delivered. "Indicating that ICE gathering is complete" says that events where <code class="notranslate">event.complete == null</code> should not be delivered but then refers to the <code class="notranslate">event.candidate == true</code> test.</p>
<p dir="auto">There is clearly a nuance here that I'm missing, but in any case this may need to be clarified. An uninformed reader would form the conclusion that actually a <code class="notranslate">event.complete != null</code> test is needed.</p>
<p dir="auto">There's also mixed references to RTCPeerConnectionIceEvent (bluelinked) and RTCPeerIceCandidateEvent (redlinked), not sure if that's intentional.</p>]]></content:encoded>
        </item>
    </channel>
</rss>